
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Automation
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Automation.
Перем КонтекстСохраняемый Экспорт;

// Делает отключение модуля
&НаКлиенте
Функция ОтключениеМодуля() Экспорт

	Ванесса = Неопределено;
	Контекст = Неопределено;
	КонтекстСохраняемый = Неопределено;

КонецФункции

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;
	
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты, 
		"ЯВставляюПроизвольныйТекстВАвтоинструкцию(Парам)", 
		"ЯВставляюПроизвольныйТекстВАвтоинструкцию", 
		"И я вставляю произвольный текст в автоинструкцию " + Символы.ПС +
		" |' <a id=""header"" /> '|" + Символы.ПС +
		" |''|" + Символы.ПС +
		" |' <a id=""Chapter 1"" /> '|" + Символы.ПС +
		" |''|" + Символы.ПС +
		" |' <a id=""Chapter 2"" /> '|" + Символы.ПС +
		" |''|" + Символы.ПС +
		" |' ## Оглавление '|" + Символы.ПС +
		" |''|" + Символы.ПС +
		" |' * <a href=""#header"">Перейти к оглавлению</a> '|" + Символы.ПС +
		" |'   * <a href=""#Chapter 1"">Глава 1</a> '|" + Символы.ПС +
		" |'     * <a href=""#Chapter 2"">Глава 2</a> '|", 
		"Позволяет вставить произвольный текст в автоинструкцию без скриншота шага. 
		|Например в MD этот шаг используется для добавления оглавления, и его наполнения. В MD этот шаг не будет автонумерован.", 
		"Прочее.Автоинструкции.ТекстовыеИнструкции");
	
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты, 
		"ЯВставляюИзображениеВАвтоинструкцию(Парам)", 
		"ЯВставляюИзображениеВАвтоинструкцию", 
		"И я вставляю изображение в автоинструкцию " + Символы.ПС + 
		" |'АлтернативныйТекст'|'Изображение1'|" + Символы.ПС + 
		" |'Путь'|'https://1cbn.ru/images/trading_scheme.png'|" + Символы.ПС + 
		" |'Подсказка'|'Мое изображение №1'|" + Символы.ПС + 
		" |'Ссылка'|'https://1cbn.ru'|" + Символы.ПС, 
		"Вставка изображения с гипрссылкой в автоинструкцию HTML или MD. Путь может быть задан 
		|как относительный ""../trading_scheme.png"", так и абсолютный ""https://1cbn.ru/images/trading_scheme.png"" ", 
		"Прочее.Автоинструкции.ТекстовыеИнструкции");
	
	Ванесса.ДобавитьШагВМассивТестов(
		ВсеТесты,
		"ЯВставляюРазрывСтраницыВАвтоинструкцию()",
		"ЯВставляюРазрывСтраницыВАвтоинструкцию",
		"И я вставляю разрыв страницы в автоинструкцию","","");
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты, "ЯВставляюИзображениеИзФайлаВАвтоинструкцию(Парам01)", 
		"ЯВставляюИзображениеИзФайлаВАвтоинструкцию", 
		"И я вставляю изображение из файла в автоинструкцию ""КартинкаСписокСправочник1""" + Символы.ПС, 
		"Позволяет вставить изображение из файла в автоинструкцию. 
		|Поиск по имени файла производится в каталоге проекта в папке ""Файлы"".", 
		"Прочее.Автоинструкции.Вставка изображения из файла");
	
	Возврат ВсеТесты;
КонецФункции

&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции

&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Функция выполняется перед началом каждого сценария
Функция ПередНачаломСценария() Экспорт
	
КонецФункции

&НаКлиенте
// Функция выполняется перед окончанием каждого сценария
Функция ПередОкончаниемСценария() Экспорт
	
КонецФункции



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И я вставляю произвольный текст в автоинструкцию
//@ЯВставляюПроизвольныйТекстВАвтоинструкцию()
Функция ЯВставляюПроизвольныйТекстВАвтоинструкцию(Парам) Экспорт
	
	Если ТипЗнч(Парам) <> Тип("Массив") И Парам.Количество() = 0 Тогда
		
		ВызватьИсключение НСтр("ru = 'Параметр текст не заполнен'");
		
	КонецЕсли
	
КонецФункции

&НаКлиенте
//И я вставляю изображение в автоинструкцию
//@ЯВставляюИзображениеВАвтоинструкцию()
Функция ЯВставляюИзображениеВАвтоинструкцию(Парам) Экспорт
	
	Если ТипЗнч(Парам) <> Тип("Массив") И Парам.Количество() = 0 Тогда
		
		ВызватьИсключение НСтр("ru = 'Параметр текст не заполнен'");
		
	КонецЕсли;
	
	ПринятыеПараметры = Парам;
	
	// СоздаватьИнструкциюMarkdown
	Если Ванесса.Объект.СоздаватьИнструкциюMarkdown И Не Ванесса.Объект.СоздаватьИнструкциюHTML Тогда
		
		ШаблонСтрокиMD = "[![%1](%2 ""%3"")](%4)";
		// добавить проверки значений
		ПроизвольнаяСтрока = Ванесса._СтрШаблон(ШаблонСтрокиMD, ПринятыеПараметры[0].Кол2, ПринятыеПараметры[1].Кол2, ПринятыеПараметры[2].Кол2, ПринятыеПараметры[3].Кол2);
		
		Парам.Очистить();
		Парам.Добавить(Новый Структура("Кол1", ПроизвольнаяСтрока));
		
	// СоздаватьИнструкциюHTML
	ИначеЕсли Не Ванесса.Объект.СоздаватьИнструкциюMarkdown И Ванесса.Объект.СоздаватьИнструкциюHTML Тогда
		
		ШаблонСтрокиСсылкиHTML = "<a href=""%1"" target=""_blank"" >";
		ШаблонСтокиИзображения = "<Img src=""%1"" alt=""%2"" title=""%3""></Img></a>";
		
		СтрокаСсылки = Ванесса._СтрШаблон(ШаблонСтрокиСсылкиHTML, ПринятыеПараметры[3].Кол2);
		СтрокаИзображения = Ванесса._СтрШаблон(ШаблонСтокиИзображения, ПринятыеПараметры[1].Кол2, ПринятыеПараметры[0].Кол2, ПринятыеПараметры[2].Кол2);
		
		Парам.Очистить();
		Парам.Добавить(Новый Структура("Кол1", СтрокаСсылки));
		Парам.Добавить(Новый Структура("Кол1", СтрокаИзображения));
		
	Иначе
		ВызватьИсключение "Не реализовано.";
	КонецЕсли;
	
КонецФункции

&НаКлиенте
//И я вставляю разрыв страницы в автоинструкцию
//@ЯВставляюРазрывСтраницыВАвтоинструкцию()
Функция ЯВставляюРазрывСтраницыВАвтоинструкцию() Экспорт
	
	ПереданныеВШагТаблицы = Новый Массив;
	МассивПараметров = Новый Массив;
	Парам = Новый Структура;
	Парам.Вставить("Кол1", "<div style=""page-break-after: always;""></div>");
	МассивПараметров.Добавить(Парам);
	ПереданныеВШагТаблицы.Добавить(МассивПараметров);
	
	ТекущийШаг = Ванесса.ПолучитьСтруктуруТекущегоШагаИзМассивСценариевДляВыполнения();
	ТекущийШаг.Вставить("ПереданныеВШагТаблицы", ПереданныеВШагТаблицы);
	
КонецФункции

//И я вставляю изображение из файла в автоинструкцию
//@ЯВставляюИзображениеИзФайлаВАвтоинструкцию()
Функция ЯВставляюИзображениеИзФайлаВАвтоинструкцию(Парам01) Экспорт
	
	Если ТипЗнч(Парам01) <> Тип("Строка") ИЛИ ПустаяСтрока(Парам01) Тогда
		
		ВызватьИсключение НСтр("ru = 'Параметр имя файла не заполнен'");
		
	КонецЕсли
	
КонецФункции