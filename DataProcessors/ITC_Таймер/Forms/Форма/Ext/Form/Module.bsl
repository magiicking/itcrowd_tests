

&НаКлиенте
Процедура ОбнулитьТаймер(Команда)
	
	ОбнулитьТаймер_Сервер();
	
	ОбновитьТаймер(Команда);
	
КонецПроцедуры

&НаСервере
Процедура ОбнулитьТаймер_Сервер()
	
	Обработки.ITC_Таймер.ОбнулитьТаймерПоПользователю(ПараметрыСеанса.ТекущийПользователь);
	
КонецПроцедуры

&НаСервере
Функция СоздатьНарядИзСписка_Сервер()
	яМассивНарядов = Новый Массив();
	
	яПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	яЗапрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таймер.Задача КАК Задача,
	|	Таймер.Дата КАК Дата,
	|	Таймер.ДатаКонец КАК ДатаКонец,
	|	Таймер.Комментарий КАК Комментарий,
	|	РАЗНОСТЬДАТ(Таймер.Дата, Таймер.ДатаКонец, СЕКУНДА) / 3600 КАК Факт
	|ИЗ
	|	РегистрСведений.Таймер КАК Таймер
	|ГДЕ
	|	Таймер.Пользователь = &Пользователь
	|	И Таймер.ДатаКонец <> &ДатаКонец
	|ИТОГИ ПО
	|	Задача");
	яЗапрос.УстановитьПараметр("Пользователь", яПользователь);
	яЗапрос.УстановитьПараметр("ДатаКонец", Дата(1,1,1));
	яРезультат = яЗапрос.Выполнить();
	
	яОбращения	= яРезультат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Задача");
	
	//для каждого обращения откроем форму наряда
	НачатьТранзакцию();
	Пока яОбращения.Следующий() Цикл
		яДок = Документы.РегистрацияВремени.СоздатьДокумент();
		яДок.ДокументОснование = яОбращения.Задача;
		яДок.Ответственный = яПользователь;
		яДок.Дата = ТекущаяДата();
		яВ = яОбращения.Выбрать();
		Пока яВ.Следующий() Цикл
			яС = яДок.РабочееВремя.Добавить();
			ЗаполнитьЗначенияСвойств(яС, яВ);
		КонецЦикла;
		яДок.Записать(РежимЗаписиДокумента.Проведение);
		яМассивНарядов.Добавить(яДок.Ссылка);
		
	КонецЦикла;
	
	ОбнулитьТаймер_Сервер();
	
	ЗафиксироватьТранзакцию();
	
	Возврат яМассивНарядов;
КонецФункции

&НаКлиенте
Процедура СоздатьНарядИзСписка(Команда)
	
	яМассивПараметровОбращений = СоздатьНарядИзСписка_Сервер();
	
	//Для Каждого яНаряд Из яМассивПараметровОбращений Цикл
	//	ОткрытьФорму("Документ.Наряд.Форма.ФормаДокумента", Новый Структура("Ключ", яНаряд), ЭтаФорма);
	//КонецЦикла;
	
	//Для Каждого яПараметры Из яМассивПараметровОбращений Цикл
	//	ОткрытьФорму("Документ.Наряд.Форма.ФормаДокумента", яПараметры, ЭтаФорма, Новый УникальныйИдентификатор());
	//КонецЦикла;
	
	Элементы.ДанныеТаймера.Обновить();
	
КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДанныеТаймера.Параметры.УстановитьЗначениеПараметра("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	
	ITC_ОбщиеСервер.ЗарегистрироватьАктивность(ПараметрыСеанса.ТекущийПользователь, "ВходВСистему");
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаймер(Команда)
	
	Элементы.ДанныеТаймера.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура Таймер_Запустить(Команда)
	
	ITC_ТаймерКлиент.ЗапуститьТаймер(Неопределено, ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура Таймер_ОстановитьНаСервере(Задача, яДата)
	Обработки.ITC_Таймер.ОстановитьТаймер(Задача, , яДата);
КонецПроцедуры

&НаКлиенте
Процедура Таймер_Остановить(Команда)
	
	Если Элементы.ДанныеТаймера.ТекущаяСтрока <> неопределено Тогда
		Таймер_ОстановитьНаСервере(Элементы.ДанныеТаймера.ТекущиеДанные.Задача, ТекущаяДата());
		ОбновитьТаймер(Команда)
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	ОбновитьТаймер(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	ОбновитьТаймер(Неопределено);
КонецПроцедуры


	
