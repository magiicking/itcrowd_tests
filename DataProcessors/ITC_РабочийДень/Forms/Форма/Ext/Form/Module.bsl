
#Область События_формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СоздатьКнопкиЗадач();
	
	ЦветКнопкиВыделенной = Метаданные.ЭлементыСтиля.Кнопка_Важная.Значение;
	ЦветКнопкиОбычный = Метаданные.ЭлементыСтиля.Кнопка_Фон.Значение;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	КнопкиКолонок = 3;
	ОбновитьСостояниеКнопок_Сервер();
	
	ПодключитьОбработчикОжидания("ОбновитьСостояниеКнопок", 60, Ложь);
КонецПроцедуры

#КонецОбласти

#Область События_элементов

&НаКлиенте
Процедура ОсновнаяЗадачаПриИзменении(Элемент)
	ЗаполнитьПодчиненныеЗадачи();
КонецПроцедуры

&НаКлиенте
Процедура Запустить(Команда)
	Если Не ЗначениеЗаполнено(Объект.ОсновнаяЗадача) Тогда
		яСообщениеЗаполнить = Новый СообщениеПользователю;
		яСообщениеЗаполнить.Текст = "Не указана основная задача";
		яСообщениеЗаполнить.Сообщить();
		Возврат;
	КонецЕсли;
	Запустить_Сервер(ТекущаяДата());
КонецПроцедуры

&НаКлиенте
Процедура Остановить(Команда)
	Элементы.Запустить.Пометка = Истина;
	ЭтаФорма.ТекущийЭлемент = Элементы.Запустить;
	КнопкаЗадачи(Команда);
КонецПроцедуры

&НаСервере
Процедура Остановить_Сервер(яДата)
	Обработки.ITC_Таймер.ОстановитьТаймер(,,яДата);
КонецПроцедуры

&НаКлиенте
Процедура КнопкаЗадачи(Команда)
	
	яОсновнойЭлемент = Элементы.Запустить;
	яЭлемент = ЭтаФорма.ТекущийЭлемент;
	
	яЭлемент.Пометка = Не яЭлемент.Пометка;
	
	Если Не яЭлемент.Пометка Тогда
		Если яЭлемент = яОсновнойЭлемент Тогда
			Остановить_Сервер(ТекущаяДата());
		Иначе
			НазначитьЦвет(яЭлемент, ЦветКнопкиВыделенной, ЦветКнопкиОбычный);
			яЭлемент = яОсновнойЭлемент;
			яЭлемент.Пометка = Истина;
		КонецЕсли;
	ИначеЕсли яЭлемент <> яОсновнойЭлемент Тогда
		Если яОсновнойЭлемент.Пометка Тогда
			яОсновнойЭлемент.Пометка = Ложь;
			НазначитьЦвет(яОсновнойЭлемент, ЦветКнопкиВыделенной, ЦветКнопкиОбычный);
		КонецЕсли;
	КонецЕсли;
	
	// Установка текущей задачи
	яОтбор = Новый Структура("ИмяКнопки", яЭлемент.Имя);
	яПоискЗадачи = ТаблицаЗадач.НайтиСтроки(яОтбор);
	Если яПоискЗадачи.Количество() > 0 Тогда
		яСтрокаЗадачи = яПоискЗадачи[0];
		ТекущаяЗадача = яСтрокаЗадачи.Задача;
	Иначе
		ТекущаяЗадача = Объект.ОсновнаяЗадача;
	КонецЕсли;
	
	// Снятие отметок у других элементов
	Для яРяд = 1 По КнопкиРядов Цикл
		Для яКолонка = 1 По КнопкиКолонок Цикл
			яИмя = КнопкиИмя + яКолонка + яРяд;
			яЭлементПеребор = Элементы[яИмя];
			Если яЭлементПеребор.Пометка И яЭлементПеребор.Имя <> яЭлемент.Имя Тогда
				яЭлементПеребор.Пометка = Ложь;
				НазначитьЦвет(яЭлементПеребор, ЦветКнопкиВыделенной, ЦветКнопкиОбычный);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	НазначитьЦвет(яЭлемент, ЦветКнопкиВыделенной, ЦветКнопкиОбычный);
	
	Если яЭлемент.Пометка Тогда
		Запустить_Сервер(ТекущаяДата());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояние(Команда)
	ОбновитьСостояниеКнопок();
КонецПроцедуры

&НаКлиенте
Процедура ПоискЗадачиОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ПодключитьОбработчикОжидания("ПоискЗадач_Отсрочка", 0.3, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПоискЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущаяЗадача = ПоискЗадач.НайтиПоИдентификатору(ВыбраннаяСтрока).Значение;
	яДата = ТекущаяДата();
	Запустить_Сервер(яДата);
	ОбновитьСостояниеКнопок_Сервер();
КонецПроцедуры

#КонецОбласти

#Область Логика

&НаСервере
Процедура Запустить_Сервер(яДата)
	Обработки.ITC_Таймер.ЗапуститьТаймер(ТекущаяЗадача
	, ПараметрыСеанса.ТекущийПользователь
	, ""
	, яДата);	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПодчиненныеЗадачи_Запрос()
	
	Возврат
	"ВЫБРАТЬ
	|	Таймер.Задача КАК Задача,
	|	МАКСИМУМ(Таймер.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ_ЗадачиТаймера
	|ИЗ
	|	РегистрСведений.Таймер КАК Таймер
	|ГДЕ
	|	Таймер.Пользователь = &Пользователь
	|	И Таймер.Задача <> &Родитель
	|
	|СГРУППИРОВАТЬ ПО
	|	Таймер.Задача
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 10
	|	ВТ_ЗадачиТаймера.Задача КАК Задача,
	|	ВТ_ЗадачиТаймера.Дата КАК Дата
	|ПОМЕСТИТЬ ВТ_ЗадачиТаймераИтог
	|ИЗ
	|	ВТ_ЗадачиТаймера КАК ВТ_ЗадачиТаймера
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ЗадачиТаймера.Дата УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 20
	|	ITC_Задача.Ссылка КАК Задача,
	|	ITC_Задача.Наименование КАК Наименование
	|ПОМЕСТИТЬ ВТ_ИТОГ
	|ИЗ
	|	Справочник.ITC_Задача КАК ITC_Задача
	|ГДЕ
	|	ITC_Задача.Родитель = &Родитель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ЗадачиТаймераИтог.Задача,
	|	ВТ_ЗадачиТаймераИтог.Задача.Наименование
	|ИЗ
	|	ВТ_ЗадачиТаймераИтог КАК ВТ_ЗадачиТаймераИтог
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 30
	|	ВТ_ИТОГ.Задача КАК Задача,
	|	ВТ_ИТОГ.Наименование КАК Наименование
	|ИЗ
	|	ВТ_ИТОГ КАК ВТ_ИТОГ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПодчиненныеЗадачи()
	
	яЗ = Новый Запрос;
	яЗ.УстановитьПараметр("Родитель", Объект.ОсновнаяЗадача);
	яЗ.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	яЗ.Текст = ЗаполнитьПодчиненныеЗадачи_Запрос();
	
	яРезЗап = яЗ.Выполнить();
	яВ = яРезЗап.Выбрать();
	
	ТаблицаЗадач.Очистить();
	яЕстьЗадача = ЗначениеЗаполнено(Объект.ОсновнаяЗадача);
	
	Для яРяд = 1 По КнопкиРядов Цикл
		Для яКолонка = 1 По КнопкиКолонок Цикл
			яИмя = КнопкиИмя + яКолонка + яРяд;
			яЭлемент = Элементы[яИмя];
			Если яВ.Следующий() Тогда
				яЭлемент.Видимость = Истина;
				яНов = ТаблицаЗадач.Добавить();
				ЗаполнитьЗначенияСвойств(яНов, яВ);
				яНов.ИмяКнопки = яИмя;
				яЭлемент.Пометка = (яНов.Задача = ТекущаяЗадача);
				НазначитьЦвет(яЭлемент, ЦветКнопкиВыделенной, ЦветКнопкиОбычный);
				яЭлемент.Заголовок = яНов.Наименование;
			Иначе
				яЭлемент.Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
		Для яКолонка = КнопкиКолонок + 1 По КнопкиКолонокМаксимум Цикл
			яИмя = КнопкиИмя + яКолонка + яРяд;
			яЭлемент = Элементы[яИмя];
			яЭлемент.Видимость = Ложь;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НазначитьЦвет(яЭлемент, яЦвет, яЦвет2)
	Если яЭлемент.Пометка Тогда
		яЭлемент.ЦветФона = яЦвет; //Новый Цвет(136, 176, 75);
	Иначе
		яЭлемент.ЦветФона = яЦвет2; //Новый Цвет(255,255,255);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СоздатьКнопкиЗадач()
	
    КнопкиРядов = 10;
	КнопкиКолонокМаксимум = Элементы.КнопкиКолонок.МаксимальноеЗначение;
	КнопкиИмя = "кнЗадача";
	яИмяКолонок = "грКолонка";
	
	яМассивСвойств = Новый Массив;
	яМассивСвойств.Добавить("Видимость,Высота,ВысотаЗаголовка,Ширина,ЦветФона,ЦветТекста");
	яМассивСвойств.Добавить(Ложь);
	яМассивСвойств.Добавить(2);
	яМассивСвойств.Добавить(2);
	яМассивСвойств.Добавить(23);
	яМассивСвойств.Добавить(ЦветКнопкиОбычный);
	яМассивСвойств.Добавить(Метаданные.ЭлементыСтиля.Кнопка_ЦветШрифта.Значение);
	
	яСвойства = Новый (Тип("Структура"), яМассивСвойств);
	Для яРяд = 1 По КнопкиРядов Цикл
		Для яКолонка = 1 По КнопкиКолонокМаксимум Цикл
			
			яИмя = КнопкиИмя + яКолонка + яРяд;
			
			Если Элементы.Найти(яИмя) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			яКнопка = ITC_DFI.СздКнопка(ЭтаФорма
			, яИмя
			, яИмяКолонок + яКолонка
			,, "КнопкаЗадачи", 1
			, яСвойства);
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НайтиТекущуюЗадачу()
	яЗ = Новый Запрос;
	яЗ.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	яЗ.УстановитьПараметр("ДатаКонец", '00010101');
	яЗ.Текст = 
	"ВЫБРАТЬ
	|	Таймер.Задача КАК Задача
	|ИЗ
	|	РегистрСведений.Таймер КАК Таймер
	|ГДЕ
	|	Таймер.Пользователь = &Пользователь
	|	И Таймер.ДатаКонец = &ДатаКонец";
	
	яРезЗап = яЗ.Выполнить();
	яВ = яРезЗап.Выбрать();
	Если яВ.Следующий() Тогда
		ТекущаяЗадача = яВ.Задача;
	Иначе
		ТекущаяЗадача = Справочники.ITC_Задача.ПустаяСсылка();
	КонецЕсли;
	
	Элементы.Запустить.Пометка = (ТекущаяЗадача = Объект.ОсновнаяЗадача);
	НазначитьЦвет(Элементы.Запустить, ЦветКнопкиВыделенной, ЦветКнопкиОбычный);
	
	Для Каждого яСтрока Из ТаблицаЗадач Цикл
		яКнопка = Элементы[яСтрока.ИмяКнопки];
		яПометка = (яСтрока.Задача = ТекущаяЗадача);
		Если яКнопка.Пометка <> яПометка Тогда
			яКнопка.Пометка = яПометка;
			НазначитьЦвет(яКнопка, ЦветКнопкиВыделенной, ЦветКнопкиОбычный);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояниеКнопок() Экспорт
	ОбновитьСостояниеКнопок_Сервер();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСостояниеКнопок_Сервер()
	ЗаполнитьПодчиненныеЗадачи();
	НайтиТекущуюЗадачу();
КонецПроцедуры

&НаСервере
Функция ПоискЗадач_Запрос()
	Возврат
	"ВЫБРАТЬ
	|	ITC_Задача.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ITC_Задача КАК ITC_Задача
	|ГДЕ
	|	ITC_Задача.JIRA_ID ПОДОБНО &Текст
	|	ИЛИ ITC_Задача.Наименование ПОДОБНО &Текст";
КонецФункции

&НаКлиенте
Процедура ПоискЗадач_Отсрочка() Экспорт
	ПоискЗадач(ПоискЗадачи);
КонецПроцедуры

&НаСервере
Процедура ПоискЗадач(Текст)
	
	яЗ = Новый Запрос;
	яЗ.УстановитьПараметр("Текст", "%" + Текст + "%");
	яЗ.Текст = ПоискЗадач_Запрос();
	
	яРезЗап = яЗ.Выполнить();
	яВ = яРезЗап.Выбрать();
	ПоискЗадач.Очистить();
	Пока яВ.Следующий() Цикл
		ПоискЗадач.Добавить(яВ.Ссылка, яВ.Ссылка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкиКолонокПриИзменении(Элемент)
	СоздатьКнопкиЗадач();
	ОбновитьСостояниеКнопок();
КонецПроцедуры

#КонецОбласти