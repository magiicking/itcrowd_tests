
&НаСервере
Процедура ОбновитьКалендарь() 
	
	Календарь.ТекущиеПериодыОтображения.Очистить();
	ДеньКалендаря = Период.ДатаНачала;
	Пока ДеньКалендаря < Период.ДатаОкончания Цикл
		НачалоРабочегоВремени = НачалоДня(ДеньКалендаря)+9*60*60;
		КонецРабочегоВремени = НачалоРабочегоВремени+12*60*60;
		Календарь.ТекущиеПериодыОтображения.Добавить(НачалоРабочегоВремени, КонецРабочегоВремени);
		ДеньКалендаря = ДеньКалендаря + 24*60*60;
	КонецЦикла;
	Календарь.НачалоПериодаОтображения = Период.ДатаНачала;
	Календарь.КонецПериодаОтображения = Период.ДатаОкончания;
	
	//Сделаем выборку данных
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Наряд.Ссылка КАК Наряд,
	|	Наряд.Описание КАК ЧтоСделать,
	|	Наряд.ПланДатаНачала КАК Начало,
	|	Наряд.ПланДатаОкончания КАК Конец,
	|	Наряд.ДокументОснование.Клиент КАК Клиент,
	|	Наряд.Адрес КАК Адрес,
	|	Наряд.Ответственный КАК Ответственный,
	|	Наряд.НаВыезде КАК НаВыезде
	|ИЗ
	|	Документ.Наряд КАК Наряд
	|ГДЕ
	|	Наряд.Проведен
	|	И (Наряд.ПланДатаНачала МЕЖДУ &ДатаНачала И &ДатаОкончания
	|			ИЛИ Наряд.ПланДатаОкончания МЕЖДУ &ДатаНачала И &ДатаОкончания)
	|	И Наряд.Ответственный В(&СписокСотрудников)";
	Запрос.УстановитьПараметр("СписокСотрудников", СписокПользователей.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала );
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	
	Результат = Запрос.Выполнить();
	
	Календарь.Элементы.Очистить();
	Наряды = Результат.Выбрать();
	
	Календарь.Измерения.Очистить();
    Сотрудники = Календарь.Измерения.Добавить("Сотрудник");
	Для каждого Сотрудник из СписокПользователей Цикл
		Сотрудники.Элементы.Добавить(Сотрудник.Значение);
	КонецЦикла;
	
	Пока Наряды.Следующий() Цикл
		Плашка = Календарь.Элементы.Добавить(Наряды.Начало, Наряды.Конец);
		Плашка.Значение = Наряды.Наряд;
		Плашка.Текст = СокрЛП(Наряды.ЧтоСделать);
		сИзмерения = Новый Соответствие();
		сИзмерения.Вставить("Сотрудник", Наряды.Ответственный);
		Плашка.ЗначенияИзмерений = Новый ФиксированноеСоответствие(сИзмерения);
		Если Наряды.Начало < ТекущаяДата() Тогда
			Если Наряды.Конец < ТекущаяДата() Тогда
				Плашка.ЦветТекста = ЦветаСтиля.ЗаблокированныйРеквизитЦвет;
			Иначе
				Плашка.Шрифт = Новый Шрифт(Плашка.Шрифт, , ,Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьНаряд(Параметры)
	
	Наряд = неопределено;	
	Если Параметры.Свойство("Наряд", Наряд) Тогда
		НарядОбъект = Наряд.ПолучитьОбъект();
	Иначе
		НарядОбъект = Документы.РегистрацияВремени.СоздатьДокумент();
	КонецЕсли;

	НарядОбъект.ПланДатаНачала = Параметры.Начало;
	НарядОбъект.ПланДатаОкончания = Параметры.Конец;
	НарядОбъект.ДокументОснование = Параметры.Задача;
	НарядОбъект.Описание = Параметры.ЧтоСделать;
	НарядОбъект.Ответственный = Параметры.Ответственный;
	НарядОбъект.Дата = ТекущаяДата();
	
	НарядОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Возврат НарядОбъект.Ссылка;
	
КонецФункции

&НаСервереБезКонтекста
Функция УдалитьНаряд(Наряд)
	Если не ЗначениеЗаполнено(Наряд) тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Наряд.ПланДатаНачала < ТекущаяДата() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НарядОбъект = Наряд.ПолучитьОбъект();
	НарядОбъект.УстановитьПометкуУдаления(Истина);
	
	Возврат Истина;
КонецФункции



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика
	Если Не ЗначениеЗаполнено(Период.ДатаНачала)  тогда
		Период.Вариант = ВариантСтандартногоПериода.Следующие7Дней;
	КонецЕсли;
	
	ОбновитьКалендарь();
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьКалендарь();
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	// Вставить содержимое обработчика.
	ОбновитьКалендарь();
КонецПроцедуры

&НаКлиенте
Процедура СписокПользователейПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьКалендарь();
КонецПроцедуры

&НаКлиенте
Процедура КалендарьВыбор(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если Элемент.ВыделенныеЭлементы.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Элемент.ВыделенныеЭлементы[0].Значение);

КонецПроцедуры

&НаКлиенте
Процедура КалендарьПередСозданием(Элемент, Начало, Конец, Значения, Текст, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
		// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	
	Ключ = Новый Структура();
	Ключ.Вставить("Начало", Начало);
	Ключ.Вставить("Конец", Конец);
	Ключ.Вставить("Ответственный", Значения["Сотрудник"]);
	
	ОткрытьФорму("Обработка.КалендарьГруппы.Форма.ФормаНовогоНаряда", Ключ, ЭтаФорма); 

КонецПроцедуры

&НаКлиенте
Процедура КалендарьПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)
	// Вставить содержимое обработчика.
		// Вставить содержимое обработчика.
	Если  Элемент.ВыделенныеЭлементы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписьВКалендаре = Элемент.ВыделенныеЭлементы[0];
	
	ПараметрыНаряда = Новый Структура();
	ПараметрыНаряда.Вставить("Начало", ЗаписьВКалендаре.Начало);
	ПараметрыНаряда.Вставить("Конец", ЗаписьВКалендаре.Конец);
	ПараметрыНаряда.Вставить("ЧтоСделать", ЗаписьВКалендаре.Текст);
	Если ЗначениеЗаполнено(ЗаписьВКалендаре.Значение) Тогда
		ПараметрыНаряда.Вставить("Наряд", ЗаписьВКалендаре.Значение.Наряд);
	КонецЕсли;
	Наряд = ОбновитьНаряд(ПараметрыНаряда);
	ЗаписьВКалендаре.Значение = Наряд;

КонецПроцедуры

&НаКлиенте
Процедура КалендарьПередНачаломБыстрогоРедактирования(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура КалендарьПередУдалением(Элемент, Отказ)
	// Вставить содержимое обработчика.
	Если Элемент.ВыделенныеЭлементы.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Наряд = Элемент.ВыделенныеЭлементы[0].Значение;
	Отказ = НЕ УдалитьНаряд(Наряд);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	//Вставить содержимое обработчика
	ОбновитьКалендарь();
КонецПроцедуры


