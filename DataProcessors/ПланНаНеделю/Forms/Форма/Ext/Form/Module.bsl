
&НаКлиенте
Процедура Заполнить(Команда)
	ОбновитьКалендарь(Элементы.Задачи.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура НарядыПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьКалендарь(Элементы.Задачи.ТекущаяСтрока);
КонецПроцедуры

&НаСервере
Процедура ОбновитьКалендарь(Задача) 
	
	Календарь.ТекущиеПериодыОтображения.Очистить();
	ДеньКалендаря = НачалоДня(ТекущийПериод);
	КонецКалендаря = КонецДня(ТекущийПериод + СколькоДней*24*3600);
	ТекущийПериодСтрокой = Формат(ТекущийПериод,"ДФ='ддд дд.ММ'")+" - "+Формат(КонецКалендаря,"ДФ='ддд дд.ММ'");
	Пока ДеньКалендаря < КонецКалендаря Цикл
		НачалоРабочегоВремени = НачалоДня(ДеньКалендаря)+9*60*60;
		КонецРабочегоВремени = НачалоРабочегоВремени+12*60*60;
		Календарь.ТекущиеПериодыОтображения.Добавить(НачалоРабочегоВремени, КонецРабочегоВремени);
		ДеньКалендаря = ДеньКалендаря + 24*60*60;
	КонецЦикла;
	Календарь.НачалоПериодаОтображения = ДеньКалендаря;
	Календарь.КонецПериодаОтображения = КонецКалендаря;
	
	//Сделаем выборку данных
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Наряд.Ссылка КАК Наряд,
	|	Наряд.Описание КАК ЧтоСделать,
	|	Наряд.ПланДатаНачала КАК Начало,
	|	Наряд.ПланДатаОкончания КАК Конец,
	|	Наряд.ДокументОснование.Клиент КАК Клиент,
	|	Наряд.Адрес КАК Адрес,
	|	Наряд.ДокументОснование КАК Задача
	|ИЗ
	|	Документ.Наряд КАК Наряд
	|ГДЕ
	|	Наряд.Проведен
	|	И (Наряд.ПланДатаНачала МЕЖДУ &ДатаНачала И &ДатаОкончания
	|			ИЛИ Наряд.ПланДатаОкончания МЕЖДУ &ДатаНачала И &ДатаОкончания)
	|	И Наряд.Ответственный = &Ответственный";
	Запрос.УстановитьПараметр("Ответственный", Объект.Ответственный);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекущийПериод));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецКалендаря);
	Запрос.УстановитьПараметр("Статус", СтатусЗадачи);
	
	СписокЗадач.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ДеньКалендаря);
	СписокЗадач.Параметры.УстановитьЗначениеПараметра("СписокСтатусов", СтатусЗадачи.ВыгрузитьЗначения());
	СписокЗадач.Параметры.УстановитьЗначениеПараметра("Ответственный", Объект.Ответственный);
	
	Результат = Запрос.Выполнить();
	
	Календарь.Элементы.Очистить();
	Наряды = Результат.Выбрать();
	
	Пока Наряды.Следующий() Цикл
		Плашка = Календарь.Элементы.Добавить(Наряды.Начало, Наряды.Конец);
		Расшифровка = Новый Структура();
		Расшифровка.Вставить("Задача", Наряды.Задача);
		Расшифровка.Вставить("Наряд", Наряды.Наряд);
		Плашка.Значение = Расшифровка;
		Плашка.Текст = СокрЛП(Наряды.ЧтоСделать)+" ["+Наряды.Клиент+"]";
		Если Наряды.Начало < ТекущаяДата() Тогда
			Если Наряды.Конец < ТекущаяДата() Тогда
				Плашка.ЦветТекста = ЦветаСтиля.ЗаблокированныйРеквизитЦвет;
			Иначе
				Плашка.Шрифт = Новый Шрифт(Плашка.Шрифт, , ,Истина);
			КонецЕсли;
		КонецЕсли;
		
		Если Задача = Наряды.Задача Тогда
			Плашка.ЦветФона = WebЦвета.Циан;
		Иначе
			Плашка.ЦветФона = WebЦвета.ЦианСветлый;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьНаряд(Параметры)
	
	Наряд = неопределено;	
	Если Параметры.Свойство("Наряд", Наряд) Тогда
		НарядОбъект = Наряд.ПолучитьОбъект();
	Иначе
		НарядОбъект = Документы.РегистрацияВремени.СоздатьДокумент();
	КонецЕсли;

	НарядОбъект.ПланДатаНачала = Параметры.Начало;
	НарядОбъект.ПланДатаОкончания = Параметры.Конец;
	НарядОбъект.ДокументОснование = Параметры.Задача;
	НарядОбъект.Описание = Параметры.ЧтоСделать;
	НарядОбъект.Ответственный = Параметры.Ответственный;
	НарядОбъект.Дата = ТекущаяДата();
	
	НарядОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Возврат НарядОбъект.Ссылка;
	
КонецФункции

&НаСервереБезКонтекста
Функция УдалитьНаряд(Наряд)
	Если не ЗначениеЗаполнено(Наряд) тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Наряд.ПланДатаНачала < ТекущаяДата() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НарядОбъект = Наряд.ПолучитьОбъект();
	НарядОбъект.УстановитьПометкуУдаления(Истина);
	
	Возврат Истина;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика
	
	ТекущийПериод = ТекущаяДата();
		
	Если Объект.Ответственный.Пустая() Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Если СколькоДней = 0 Тогда 
		СколькоДней = 3;
	КонецЕсли;
	
	Если СтатусЗадачи.Количество() = 0 Тогда
		Запрос = Новый Запрос();
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатусыДокументов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СтатусыДокументов КАК СтатусыДокументов
		|ГДЕ
		|	НЕ СтатусыДокументов.ПометкаУдаления
		|	И НЕ СтатусыДокументов.ЕстьРезультат";
		СтатусЗадачи.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;
	
	ОбновитьКалендарь(Элементы.Задачи.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КалендарьВыбор(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если Элемент.ВыделенныеЭлементы.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Элемент.ВыделенныеЭлементы[0].Значение.Наряд);
	
КонецПроцедуры

&НаКлиенте
Процедура КалендарьПередУдалением(Элемент, Отказ)
	// Вставить содержимое обработчика.
	Если Элемент.ВыделенныеЭлементы.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	Расшифровка = Элемент.ВыделенныеЭлементы[0].Значение;
	Отказ = НЕ УдалитьНаряд(Расшифровка.Наряд);
	
КонецПроцедуры

&НаКлиенте
Процедура КалендарьПередНачаломБыстрогоРедактирования(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КалендарьПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)
	// Вставить содержимое обработчика.
	
	Если  Элемент.ВыделенныеЭлементы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ПараметрыДанных = Новый Структура;
	ЭлементКалендаря = Элемент.ВыделенныеЭлементы[0];
	ПараметрыДанных.Вставить("Начало", ЭлементКалендаря.Начало);
	ПараметрыДанных.Вставить("Конец", ЭлементКалендаря.Конец);

	Режим = РежимДиалогаВопрос.ДаНет;
	//Ответ = Вопрос("Уверены что хотите изменить?",РежимДиалогаВопрос.ДаНет,60);
	Оповещение = Новый ОписаниеОповещения("РедактированиеКалендаря_Продолжение", ЭтотОбъект, ПараметрыДанных);
	ПоказатьВопрос(Оповещение,НСтр("ru = 'Вы уверены что хотите изменить?';"),Режим,60);
	 ОтменаРедактирования = Истина;
	
КонецПроцедуры
	
&НаКлиенте
Процедура РедактированиеКалендаря_Продолжение(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	Подсказка = "Причина изменения";
	Оповещение = Новый ОписаниеОповещения("РедактированиеКалендаря_Завершение", ЭтотОбъект, Параметры);
	ПоказатьВводСтроки(Оповещение, "",Подсказка, 0, Истина);
			
КонецПроцедуры





&НаКлиенте
Процедура РедактированиеКалендаря_Завершение(Результат,Параметры) Экспорт 
	
	Если Результат = Неопределено Или Результат = "" Тогда
		
		Сообщить("Время наряда не проведено,ваш наряд не изменен");
		возврат;
		//ИначеЕсли 
		
	КонецЕсли; 
	
	Элемент = элементы.Календарь;
	
	ЗаписьВКалендаре = Элемент.ВыделенныеЭлементы[0];
	РедактированиеКалендаря_Завершение_НаСервере(Результат,Параметры, ЗаписьВКалендаре.Значение.Наряд);
	
	
	//
	//ПараметрыНаряда = Новый Структура();
	//ПараметрыНаряда.Вставить("Задача", Элементы.Задачи.ТекущаяСтрока);
	//ПараметрыНаряда.Вставить("Начало", ЗаписьВКалендаре.Начало);
	//ПараметрыНаряда.Вставить("Конец", ЗаписьВКалендаре.Конец);
	//ПараметрыНаряда.Вставить("ЧтоСделать", ЗаписьВКалендаре.Текст);
	//ПараметрыНаряда.Вставить("Ответственный", Объект.Ответственный);
	//Если ЗначениеЗаполнено(ЗаписьВКалендаре.Значение) Тогда
	//	ПараметрыНаряда.Вставить("Наряд", ЗаписьВКалендаре.Значение.Наряд);
	//КонецЕсли;
	//Наряд = ОбновитьНаряд(ПараметрыНаряда);
	//Расшифровка = Новый Структура();
	//Расшифровка.Вставить("Наряд", Наряд);
	//Расшифровка.Вставить("Задача", Элементы.Задачи.ТекущаяСтрока);
	//ЗаписьВКалендаре.Значение = Расшифровка;
КонецПроцедуры

&НаСервере
Процедура РедактированиеКалендаря_Завершение_НаСервере(Результат,Параметры,СсылкаНаряд)
	Элемент = элементы.Календарь;
	
ЗаписьВКалендаре = Элемент.ВыделенныеЭлементы[0];
	ТвойМенеджерЗаписи = РегистрыСведений.ИзмениеНаряд.СоздатьМенеджерЗаписи();
	ТвойМенеджерЗаписи.Наряд = Ссылканаряд; //ЗначениеНаряд
	ТвойМенеджерЗаписи.ДатаИзмения = ТекущаяДата(); //ЗначениеДатаИзмения
	ТвойМенеджерЗаписи.Описание = Результат;
	ТвойМенеджерЗаписи.ПрошлоеВремяНачала = ЗаписьВКалендаре.Начало;
	ТвойМенеджерЗаписи.Записать();
	     	
	
	ПараметрыНаряда = Новый Структура();
	ПараметрыНаряда.Вставить("Задача", Элементы.Задачи.ТекущаяСтрока);
	ПараметрыНаряда.Вставить("Начало", Параметры.Начало);
	ПараметрыНаряда.Вставить("Конец", Параметры.Конец);
	ПараметрыНаряда.Вставить("ЧтоСделать", ЗаписьВКалендаре.Текст);
	ПараметрыНаряда.Вставить("Ответственный", Объект.Ответственный);
	Если ЗначениеЗаполнено(ЗаписьВКалендаре.Значение) Тогда
		ПараметрыНаряда.Вставить("Наряд", ЗаписьВКалендаре.Значение.Наряд);
	КонецЕсли;
	Наряд = ОбновитьНаряд(ПараметрыНаряда);
	Расшифровка = Новый Структура();
	Расшифровка.Вставить("Наряд", Наряд);
	Расшифровка.Вставить("Задача", Элементы.Задачи.ТекущаяСтрока);
	ЗаписьВКалендаре.Значение = Расшифровка;
	ЗаписьВКалендаре.Начало = Параметры.Начало;
	ЗаписьВКалендаре.Конец = Параметры.Конец;

КонецПроцедуры

&НаКлиенте
Процедура КалендарьПередСозданием(Элемент, Начало, Конец, Значения, Текст, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	Если Элементы.Задачи.ТекущиеДанные = Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	Ключ = Новый Структура();
	Ключ.Вставить("Начало", Начало);
	Ключ.Вставить("Конец", Конец);
	Ключ.Вставить("Задача", Элементы.Задачи.ТекущаяСтрока);
	Ключ.Вставить("Ответственный", Объект.Ответственный);
	
	ОткрытьФорму("Обработка.ПланНаНеделю.Форма.ФормаНовогоНаряда", Ключ, ЭтаФорма); 

КонецПроцедуры

&НаКлиенте
Процедура СтатусЗадачиПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьКалендарь(Элементы.Задачи.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьКалендарь(Элементы.Задачи.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ЗадачиПриАктивизацииСтроки(Элемент)
	// Вставить содержимое обработчика.
	
	ВыбраннаяЗадача = Элемент.ТекущаяСтрока;
	Для каждого Плашка ИЗ Календарь.Элементы Цикл
		Если Не ЗначениеЗаполнено(Плашка.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВыбраннаяЗадача = Плашка.Значение.Задача Тогда
			Плашка.ЦветФона = WebЦвета.Циан;
		Иначе
			Плашка.ЦветФона = WebЦвета.ЦианСветлый;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КалендарьПриАктивизации(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Сегодня(Команда)
	// Вставить содержимое обработчика.
	ТекущийПериод = ТекущаяДата();
	ОбновитьКалендарь(Элементы.Задачи.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	// Вставить содержимое обработчика.
	ТекущийПериод = ТекущийПериод - СколькоДней*24*3600;
	ОбновитьКалендарь(Элементы.Задачи.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Вперед(Команда)
	// Вставить содержимое обработчика.
	ТекущийПериод = ТекущийПериод + СколькоДней*24*3600;
	ОбновитьКалендарь(Элементы.Задачи.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СколькоДнейПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьКалендарь(Элементы.Задачи.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	//Вставить содержимое обработчика
	ОбновитьКалендарь(Элементы.Задачи.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура Outlook(Команда)
	// Вставить содержимое обработчика.
	Попытка 
		Аутлук = Новый COMОбъект("Outlook.Application");
	Исключение
		Сообщить("Не доступен программный интерфейс к Аутлуку");
		Возврат;
	КонецПопытки;
	
	ПространствоИмен = Аутлук.GetNamespace("MAPI");
	Папка = ПространствоИмен.PickFolder();
	
	фильтр = "[Start] > '12/06/2019' AND [Start] < '15/06/2019'";
	Таблица = Папка.GetTable(Фильтр);
	
	Пока НЕ Таблица.EndOfTable Цикл
		Строка = Таблица.GetNextRow();
		Тема = Строка.Item("Subject");
		Сообщить(Тема);
		
	КонецЦикла
	
КонецПроцедуры

