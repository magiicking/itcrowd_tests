
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Если ПараметрыВыполненияКоманды.Источник.Модифицированность Тогда
		  ОбщегоНазначенияКлиент.СообщитьПользователю("Запустить тест возможно только после записи данных. Запишите, пожалуйста, и повторите запуск.");
		  Возврат;
	КонецЕсли;
	
	ДопПарметры = Новый Структура;
	ДопПарметры.Вставить("База",ПараметрКоманды);
	
	ВА_ВанессаСервер.ЗаполнитьПараметрыЗапускаТестовПоБазе(ДопПарметры); 
	
	//#DIP-64  КурцовАИ 2022.09.30++
	Отказ = Ложь;	
	Если НЕ ЗначениеЗаполнено(ДопПарметры.ПапкаЛокальныхРепозиториевГита) Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Выполнение остановлено. Установите, пожалуйста, папку локальных репозиториев гита и повторите операцию.";
		Сообщение.Сообщить();	
		Отказ = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДопПарметры.ВанессаДопПараметры) Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Выполнение остановлено. Установите, пожалуйста, заполните, пожалуйста, константу Параметры запуска клиента тестирвоания базовые.";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ВА_ВанессаКлиент.ПроверитьНаличиеКаталогаИлиСоздать(ДопПарметры.ПапкаЛокальныхРепозиториевГита);
	ВА_ВанессаКлиент.ПроверитьНаличиеКаталогаИлиСоздать(ДопПарметры.БазовыйКаталогРезультатовТестов);
	//#DIP-64  КурцовАИ 2022.09.30--
	
	ФормаВанессы = ПолучитьФорму("Обработка.VanessaAutomationsingle.Форма.УправляемаяФорма");
	
	СлужебныеПараметры = ФормаВанессы.Объект.СлужебныеПараметры;
	СлужебныеПараметры.Вставить("ЗагрузитьНастройкиВанессыДляБазы_ITC", Истина);
	СлужебныеПараметры.Вставить("ЗагрузитьФичиДляБазы_ITC", Истина);
	СлужебныеПараметры.Вставить("ПодключитьКлиентаТестирования_ITC", Истина);			
	СлужебныеПараметры.Вставить("ЗапуститьВыполнениеФичАвтоматичести_ITC", Истина);		
	
	Для Каждого ЭлементСтруктуры Из ДопПарметры Цикл
		СлужебныеПараметры.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;	
	
	ФормаВанессы.Открыть();
	
	
	//#DIP-92 КурцовАИ ++
	Если СтрНайти(ФормаВанессы.Заголовок,"ver") <> 0 Тогда
		//Форма открыта   
        ВА_ВанессаКлиент.ОбработатьЗапускВанессыиИзСпрБазаОтложено();		
	КонецЕсли;
	
	Возврат;
	//#DIP-92 КурцовАИ --
	
#Область СтарыйВариант
	
	ДопПарметры.Вставить("ФормаВанессы",ФормаВанессы);
	
	ЗагрузитьНастройки(ДопПарметры);

#КонецОбласти
	
КонецПроцедуры


#Область СтарыйВариант
&НаКлиенте
Процедура ЗагрузитьНастройки(ДопПарметры) 
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьНастройкиОповещение", ЭтотОбъект, ДопПарметры);
	ПоказатьВопрос(Оповещение, "Использовать настройки по умолчанию: " + ДопПарметры.ФайлНастроек +"?    Если НЕТ, то надо будет выбрать файл настроек. Если ДА, то дождитель окончания таймера.", РежимДиалогаВопрос.ДаНет,7,,,КодВозвратаДиалога.Да);
	
КонецПроцедуры
		
&НаКлиенте
Процедура ЗагрузитьНастройкиОповещение(Результат, ДопПарметры) Экспорт
	
	Отказ = Ложь;
	ФормаВанессы = ДопПарметры.ФормаВанессы; 
	
	Если Результат = КодВозвратаДиалога.Да ИЛИ Результат = КодВозвратаДиалога.Таймаут Тогда
		ЗагрузитьНастройкиПоУмолчанию(ДопПарметры,Отказ);
	Иначе 
		ФормаВанессы.ЗагрузитьНастройкиИзФайла(Неопределено);	
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ЗагрузитьФичи(ДопПарметры);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте 
Процедура ЗагрузитьНастройкиПоУмолчанию(ДопПарметры, Отказ)
	
	ФормаВанессы = ДопПарметры.ФормаВанессы; 
	ФормаВанессы.Объект.КаталогФич = ДопПарметры.КаталогФич;
	
	Если ДопПарметры.ФайлНастроек = "" Тогда
		Отказ = Истина;
		Сообщить("Необходимо указать файл настроек по умолчанию");
	Иначе
		ДопПараметрыЗагрузки = Новый Структура;
		ВернутьНастройки = Новый Структура;
		ВернутьНастройки.Вставить("КаталогФич", ФормаВанессы.Объект.КаталогФич);
		ДопПараметрыЗагрузки.Вставить("ВернутьНастройки", ВернутьНастройки);
		ВыбранныеФайлы = Новый Массив;
		ВыбранныеФайлы.Добавить(ДопПарметры.ФайлНастроек);   	
		ФормаВанессы.ЗагрузитьНастройкиИзФайлаЗавершение(ВыбранныеФайлы, ДопПараметрыЗагрузки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Процедура ЗагрузитьФичи(ДопПарметры) 
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьФичиОповещение", ЭтотОбъект, ДопПарметры);
	ПоказатьВопрос(Оповещение, "Загрузить фичи из каталога по умолчанию: " + ДопПарметры.КаталогФич + "?      Если НЕТ, то надо будет выбрать каталог.  Если ДА, то дождитель окончания таймера.", РежимДиалогаВопрос.ДаНет,5,,,КодВозвратаДиалога.Да);	
КонецПроцедуры 

&НаКлиенте
Процедура ЗагрузитьФичиОповещение(Результат, ДопПарметры) Экспорт
	
	Отказ = Ложь;
	ФормаВанессы = ДопПарметры.ФормаВанессы; 
	
	Если Результат = КодВозвратаДиалога.Да ИЛИ Результат = КодВозвратаДиалога.Таймаут Тогда
		Если ДопПарметры.КаталогФич = "" Тогда
			Отказ = Истина;
			Сообщить("Необходимо указать каталог фич по умолчанию");
		Иначе
			ФормаВанессы.Объект.КаталогФич = ДопПарметры.КаталогФич;  
			ФормаВанессы.ЗагрузитьФичи();
		КонецЕсли;
	Иначе   
		ФормаВанессы.ЗагрузитьФичиИзКаталога(Неопределено);	
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ПодключитьКлиентаТестирования(ДопПарметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте 
Процедура ПодключитьКлиентаТестирования(ДопПарметры) 
	Оповещение = Новый ОписаниеОповещения("ПодключитьКлиентаТестированияОповещение", ЭтотОбъект, ДопПарметры);
	ПоказатьВопрос(Оповещение, "Подключить клиента тестирования по умолчанию: " + ДопПарметры.ИмяКлиентаТестирования + "?      Если НЕТ, то необходми самостоятельно выбрать клиента тестирования и запустить тесты. Если ДА, то дождитель окончания таймера.", РежимДиалогаВопрос.ДаНет,5,,,КодВозвратаДиалога.Да);	
КонецПроцедуры 

&НаКлиенте
Процедура ПодключитьКлиентаТестированияОповещение(Результат, ДопПарметры) Экспорт
	
	Отказ = Ложь;
	
	Если Результат = КодВозвратаДиалога.Да ИЛИ Результат = КодВозвратаДиалога.Таймаут Тогда
		Если ДопПарметры.ИмяКлиентаТестирования = "" Тогда
			Отказ = Истина;
			Сообщить("Необходимо указать имя клиента тестирования по умолчанию");
		Иначе
			ДопПарметры.ФормаВанессы.ПодключитьПрофильTestClientПоИмени(ДопПарметры.ИмяКлиентаТестирования); 
		КонецЕсли;		
	Иначе   
		Возврат;	
	КонецЕсли;
	
	Если НЕ Отказ Тогда 
		ДопПарметры.ФормаВанессы.КомандаВыполнитьСценарии();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
