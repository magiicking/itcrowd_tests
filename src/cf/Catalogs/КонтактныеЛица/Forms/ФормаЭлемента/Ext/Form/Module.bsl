
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.ФизическоеЛицо) Тогда
		ЗаполнитьДанныеФизическогоЛица(Объект.ФизическоеЛицо);
		ЭтаФорма.НеобходимоОбновитьФизЛицо = Ложь;
	Иначе
		ЭтаФорма.НеобходимоОбновитьФизЛицо = Истина;
	КонецЕсли;
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	ДополнительныеПараметры = УправлениеКонтактнойИнформацией.ПараметрыКонтактнойИнформации();
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаКонтактнаяИнформация");
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект.ФизическоеЛицо, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    // СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект.ФизическоеЛицо);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры
&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
    // СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект.ФизическоеЛицо, Отказ);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЗначениеЗаполнено(ТекущийОбъект.ФизическоеЛицо) Тогда
		яФЛ = ТекущийОбъект.ФизическоеЛицо.ПолучитьОбъект();
	Иначе
		яФЛ = Справочники.ФизическиеЛица.СоздатьЭлемент();
		яФЛ.Наименование = ЭтаФорма.Наименование;
	КонецЕсли;
	
	Если ЭтаФорма.НеобходимоОбновитьФизЛицо Тогда
		ЗаполнитьЗначенияСвойств(яФЛ, ЭтаФорма, , "Наименование,КонтактныеДанные");
		яФЛ.КонтактныеДанные.Загрузить(ЭтаФорма.КонтактныеДанные.Выгрузить());
		
		ЭтаФорма.НеобходимоОбновитьФизЛицо = Ложь;
		Если Не ЗначениеЗаполнено(ТекущийОбъект.ФизическоеЛицо) Тогда
			яФЛ.Записать();
			ЭтаФорма.ФизическоеЛицоБуфер = яФЛ.Ссылка;
			Объект.ФизическоеЛицо = яФЛ.Ссылка;
			ТекущийОбъект.ФизическоеЛицо = яФЛ.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
    // СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, яФЛ);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	яФЛ.Записать();
	
КонецПроцедуры
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
    // СтандартныеПодсистемы.КонтактнаяИнформация
    УправлениеКонтактнойИнформацией.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект.ФизическоеЛицо);
    // Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры
#КонецОбласти


&НаСервере
Процедура ЗаполнитьДанныеФизическогоЛица(ъЛицо, ъОбновитьКИ = Ложь)
	яЗапрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ФизическиеЛица.Фамилия КАК Фамилия,
	|	ФизическиеЛица.Имя КАК Имя,
	|	ФизическиеЛица.Отчество КАК Отчество,
	|	ФизическиеЛица.Наименование КАК Наименование,
	|	ФизическиеЛица.КонтактныеДанные.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Тип КАК Тип,
	|		Значение КАК Значение
	|	) КАК КонтактныеДанные,
	|	ФизическиеЛица.Ссылка КАК ФизическоеЛицоБуфер
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Ссылка");
	яЗапрос.УстановитьПараметр("Ссылка", ъЛицо);
	яВыборка = яЗапрос.Выполнить().Выбрать();
	Если яВыборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, яВыборка, , "КонтактныеДанные");
		ЭтаФорма.КонтактныеДанные.Загрузить(яВыборка.КонтактныеДанные.Выгрузить());
	КонецЕсли;
	
	Если ъОбновитьКИ Тогда
		// СтандартныеПодсистемы.КонтактнаяИнформация
    	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ъЛицо);
    	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	КонецЕсли;
КонецПроцедуры




&НаКлиенте
Процедура ОбновлениеДанныхКонтакта(ъФормы = Истина, ъФизЛица = Истина)
	ЭтаФорма.Модифицированность = ъФормы;
	ЭтаФорма.НеобходимоОбновитьФизЛицо = ъФизЛица;
КонецПроцедуры

&НаКлиенте
Процедура СоставитьНаименование()
	ЭтаФорма.Наименование = ЭтаФорма.Фамилия + " " + ЭтаФорма.Имя + " " + ЭтаФорма.Отчество;
	ОбновлениеДанныхКонтакта();
КонецПроцедуры

&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	СоставитьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	СоставитьНаименование();
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)
	СоставитьНаименование();
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.Наименование = ЭтаФорма.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	ЗаполнитьДанныеФизическогоЛица(Объект.ФизическоеЛицо, Истина);
	ЭтаФорма.НеобходимоОбновитьФизЛицо = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КонтактныеДанныеПриИзменении(Элемент)
	ОбновлениеДанныхКонтакта();
КонецПроцедуры

&НаКлиенте
Процедура КонтактныеДанныеТипПриИзменении(Элемент)
	ОбновлениеДанныхКонтакта();
КонецПроцедуры

&НаКлиенте
Процедура КонтактныеДанныеЗначениеПриИзменении(Элемент)
	ОбновлениеДанныхКонтакта();
КонецПроцедуры

// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
        УправлениеКонтактнойИнформациейКлиент.НачатьИзменение(ЭтотОбъект, Элемент);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьВыбор(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьОчистку(ЭтотОбъект, Элемент.Имя);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
    УправлениеКонтактнойИнформациейКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда.Имя);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
    
    УправлениеКонтактнойИнформациейКлиент.АвтоПодборАдреса(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
    
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
    
    УправлениеКонтактнойИнформациейКлиент.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, Элемент.Имя, СтандартнаяОбработка);
    
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
    УправлениеКонтактнойИнформациейКлиент.НачатьОбработкуНавигационнойСсылки(ЭтотОбъект, Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьОбновлениеКонтактнойИнформации(Результат, ДополнительныеПараметры) Экспорт
    ОбновитьКонтактнуюИнформацию(Результат);
КонецПроцедуры
&НаСервере
Процедура ОбновитьКонтактнуюИнформацию(Результат)
    УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект.ФизическоеЛицо, Результат);
КонецПроцедуры
// Конец СтандартныеПодсистемы.КонтактнаяИнформация