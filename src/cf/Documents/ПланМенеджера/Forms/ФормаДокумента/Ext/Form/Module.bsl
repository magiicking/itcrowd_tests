
&НаКлиенте
Процедура ОтменитьЗадачу(Команда)
	// Вставить содержимое обработчика.
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса",ЭтотОбъект);	
	ПоказатьВопрос(Оповещение,
	"Данная задача будет отмененна. Продолжить?",
	РежимДиалогаВопрос.ДаНет,
	0,КодВозвратаДиалога.Да,"Вопрос");
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Оповещение = Новый ОписаниеОповещения("ПослеВводаЗначения", 
		ЭтотОбъект);
		ПоказатьВводСтроки(Оповещение,,"Укажите причину отмены",100,Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеВводаЗначения(Результат, Параметры) Экспорт
	
	Если Не Результат = Неопределено и Не Результат = ""  Тогда
		ъСтрокиКОтмене = ЭтотОбъект.Элементы.ПланПоКлиентам.ВыделенныеСтроки;
		Для Каждого стр из ъСтрокиКОтмене ЦИКЛ
			ъПар = Новый Структура;
			ъПар.Вставить("НомерСтроки",стр+1);
			ъСтрока = Объект.ПланПоКлиентам.НайтиСтроки(ъПар);
			ъСтрока[0].Отменена = Истина;
			ъСтрока[0].ПричинаОтмены = Результат;
			КонецЦикла;
	Иначе 
		Сообщить ("Причина не может быть пустой");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	
	Оповещение = Новый ОписаниеОповещения(
	"УстановитьИнтервалЗавершение",
	ЭтотОбъект);
	
	ОбщегоНазначенияУТКлиент.РедактироватьПериод(Объект, 
	Новый Структура("ДатаНачала, ДатаОкончания", "НачалоПериода", "КонецПериода"),Оповещение);
	
КонецПроцедуры

&НаСервере
Процедура КонецПериодаПриИзмененииНаСервере()
	
	ЗаполнитьПоДаннымПланаОтдела();
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	КонецПериодаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДаннымПланаОтдела()
	
	Если НЕ ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ПланОтдела.ПланНаМесяц) КАК ПланНаМесяц,
	|	СУММА(ПланОтдела.ЦельНаМесяц) КАК ЦельНаМесяц,
	|	МАКСИМУМ(ПланОтдела.СертификатыСК) КАК СертификатыСК,
	|	МАКСИМУМ(ПланОтдела.СертификатыПРОФ) КАК СертификатыПРОФ,
	|	СУММА(ПланОтдела.НормаНарядов) КАК НормаНарядов,
	|	СРЕДНЕЕ(ПланОтдела.СреднееВремяНаНаряд) КАК СреднееВремяНаНаряд
	|ИЗ
	|	РегистрСведений.ПланОтдела КАК ПланОтдела
	|ГДЕ
	|	ПланОтдела.ВидПлана = ЗНАЧЕНИЕ(Перечисление.ВидПлана.Месяц)
	|	И ПланОтдела.Сотрудник = &Сотрудник
	|	И ПланОтдела.НачалоПериода >= &НачалоПериода
	|	И ПланОтдела.КонецПериода <= &КонецПериода";
	
	Запрос.УстановитьПараметр("КонецПериода", Объект.КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериода);	
	Запрос.УстановитьПараметр("Сотрудник", Объект.Сотрудник);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект, Выборка);		
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоДаннымПланаОтдела();	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалЗавершение(Период, ДополнительныеПараметры) Экспорт 
	
	ЗаполнитьПоДаннымПланаОтдела();
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьИтогиЭЧ()
	
	ИтогоЭЧ100 = 0;
	ИтогоЭЧНе100 = 0;
	
	Для каждого СтрПлан из Объект.ПланПоКлиентам Цикл
		Если СтрПлан.Вероятность = ВероятностьВыполненияПлана() Тогда
			ИтогоЭЧ100 = ИтогоЭЧ100 + СтрПлан.ЭЧ;
		Иначе
			ИтогоЭЧНе100 = ИтогоЭЧНе100 + СтрПлан.ЭЧ;
		КонецЕсли;
	КонецЦикла;
	
	ЭтаФорма.ИтогоЭЧ100 = ИтогоЭЧ100;
	ЭтаФорма.ИтогоЭЧНе100 = ИтогоЭЧНе100;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланПоКлиентамПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьИтогиЭЧ();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВероятностьВыполненияПлана()
	
	Возврат Справочники.ВероятностьФактЭЧ.Сто;
	
КонецФункции 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РассчитатьИтогиЭЧ();
КонецПроцедуры

&НаКлиенте
Процедура ПланПоКлиентамЗадачаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	Если  ЗначениеЗаполнено(ЭтаФорма.Элементы.ПланПоКлиентам.ТекущиеДанные.Клиент)

	Тогда
	ъСписок = Новый Массив;
	ъСписок.Добавить(Объект.Сотрудник);
	ъСписок.Добавить(  ПустойСотрудник ());
	НовыйПараметрСотрудник = Новый ПараметрВыбора ("Отбор.Менеджер",ъСписок);
	НовыйПараметрКлиент = Новый ПараметрВыбора ("Отбор.Клиент",ЭтаФорма.Элементы.ПланПоКлиентам.ТекущиеДанные.Клиент);
	НовыйМассив = Новый Массив;
	НовыйМассив.Добавить(НовыйПараметрКлиент);
	НовыйМассив.Добавить(НовыйПараметрСотрудник);
	НовыеПараметры = Новый ФиксированныйМассив (НовыйМассив);
	Элементы.ПланПоКлиентамЗадача.ПараметрыВыбора = НовыеПараметры;
	Иначе 
		Оповещение = Новый ОписаниеОповещения("ПослеПроверкиКлиента",
		ЭтотОбъект);	
		ПоказатьВопрос(Оповещение,
		"Прежде чем выбрать задачу необходимо указать клиента",
		РежимДиалогаВопрос.ОК,
		0,
		,
		"Не выбран Клиент"
		);
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеПроверкиКлиента(Результат, Параметры) Экспорт
 
КонецПроцедуры

Функция ПустойСотрудник ()
	возврат Справочники.Сотрудники.ПустаяСсылка()
	КонецФункции
