
#Область ОписаниеПеременных

&НаКлиенте
Перем Ванесса;

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗапуститьБраузер(Команда)
	
	СтрокаКоманды = Ванесса.Объект.КомандаЗапускаБраузера;
	НачатьЗапускПриложения(Новый ОписаниеОповещения, СтрокаКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура ОшибкаБраузера(Команда)
	
	ИнформационныйТекст =
		"Перед вызовом команды «" + ЗаголовокКоманды(Команда.Имя) + "»
		|закройте все открытые окна Google Chrome
		|и запустите снова кнопкой «Запустить браузер».";
	ПоказатьПредупреждение( , ИнформационныйТекст, 10);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьURL(Команда) Экспорт
	
	HTTPЗапрос = Новый HTTPЗапрос("/json/new?" + АдресВебКлиента);
	HTTPСоединение = Новый HTTPСоединение("localhost", 9222, , , , 10);
	Попытка
		HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);
	Исключение
		ОшибкаБраузера(Команда);
		Возврат;
	КонецПопытки;
	ТекстJSON = HTTPОтвет.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ТекстJSON);
	ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
	АдресВебСокет = ДанныеJSON.webSocketDebuggerUrl;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВызовОткрытьВебСокет", ЭтотОбъект);
	Ванесса.ВнешняяКомпонентаДляСкриншотов.НачатьВызовОткрытьВебСокет(ОписаниеОповещения, АдресВебСокет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьJavaSctipt(Команда) Экспорт
	
	ПараметрыМетода = Новый Структура("expression", ТекстJavaScript);
	ДанныеJSON = Новый Структура("id,method,params", 1, "Runtime.evaluate", ПараметрыМетода);
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеJSON);
	КомандаJSON = ЗаписьJSON.Закрыть();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВызовJavaSctipt", ЭтотОбъект);
	Ванесса.ВнешняяКомпонентаДляСкриншотов.НачатьВызовПослатьВебСокет(ОписаниеОповещения, КомандаJSON);
	
КонецПроцедуры

&НаКлиенте
Процедура СнимокЭкранаБраузера(Команда) Экспорт
	
	ПараметрыМетода = Новый Структура("format,quality,fromSurface", "png", 85, Ложь);
	ДанныеJSON = Новый Структура("id,method,params", 1, "Page.captureScreenshot", ПараметрыМетода);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеJSON);
	КомандаJSON = ЗаписьJSON.Закрыть();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПолученСнимокБраузера", ЭтотОбъект);
	Ванесса.ВнешняяКомпонентаДляСкриншотов.НачатьВызовВебСокет(ОписаниеОповещения, АдресВебСокет, КомандаJSON);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКомандыЭлементаБраузера(Команда)

	ТекстHTMLТекущийЭлементОбновить(Элементы.ТекстHTML.Документ.activeElement);
	Если Элементы.ГруппаКомандыБраузер.Видимость Тогда
		Элементы.ГруппаКомандыБраузер.Показать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаБраузераВБуфер(Команда)
	
	Если Не ПустаяСтрока(КомандаБраузера) Тогда
		Ванесса.ПоместитьВБуферОбменаVA(КомандаБраузера);
		Сообщить("Скопировано в буфер обмена")
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЭлементБраузераВБуфер(Команда)
	
	Если Элементы.КомандыЭлементаБраузера.ТекущиеДанные <> Неопределено Тогда
		Ванесса.ПоместитьВБуферОбменаVA(Элементы.КомандыЭлементаБраузера.ТекущиеДанные.Значение);
		Сообщить("Скопировано в буфер обмена")
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПортБраузера = 9222;
	
	ТочкаX = 200;
	ТочкаY = 200;
	Width = 600;
	Height = 300;
	НадписьТекст = "Для оплаты нажать ====>";
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекстHTMLТекущийЭлементОбновить(ДанныеСобытия.Element);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстHTMLПриИзменении(Элемент)
	
	ТекстHTMLТекущийЭлементОбновить(Элементы.ТекстHTML.Документ.activeElement);
	
КонецПроцедуры

&НаКлиенте
Процедура ФигурыПриИзменении(Элемент)   
	
	Если ТипФигуры = "Надпись" Тогда 
		
		Width = 0;
		Height = 0;
		Элементы.Width.Видимость = Ложь;
		Элементы.Height.Видимость = Ложь;
		Элементы.НадписьТекст.Видимость = Истина;
		
		ТекстШаблона = "{
		|    let node = document.createElement('div');
		|    node.innerHTML = 
		|    '%НадписьТекст%';
		|    node.style.fontSize = '100%';
		|    node.style.position = 'fixed';
		|    node.style.zIndex = 999999;
		|    node.style.left = '%ТочкаX%px';
		|    node.style.top = '%ТочкаY%px';
		|    node.style.color = 'red';
		|    node.style.backgroundColor = '#11ffee00';
		|    node.style.padding = '1em';
		|    window.top.document.body.appendChild(node);
		|    setTimeout(() => { if (node) node.remove() }, 10000);
		|};";   
		ПараметрыОтрисовки = Новый Структура("ТочкаX,ТочкаY,НадписьТекст", ТочкаX,ТочкаY,НадписьТекст);
		
	Иначе  
		
		Элементы.Width.Видимость = Истина;
		Элементы.Height.Видимость = Истина;
		Элементы.НадписьТекст.Видимость = Ложь;
		
		ТекстШаблона = "{
		|    let node = document.createElement('div');
		|    node.style.fontSize = '100%';
		|    node.style.position = 'fixed';
		|    node.style.zIndex = 999999;
		|    node.style.left = '%ТочкаX%px';
		|    node.style.top = '%ТочкаY%px';
		|    node.style.width = '%Width%px';
		|    node.style.height = '%Height%px';
		|    node.style.borderWidth = '%borderWidth%';
		|    node.style.borderStyle = 'solid';
		|    node.style.borderColor = '%borderColor%';
		|    node.style.backgroundColor = '#11ffee00';
		|    node.style.padding = '1em';
		|    node.style.borderRadius = '1em';
		|    window.top.document.body.appendChild(node);
		|    setTimeout(() => { if (node) node.remove() }, 10000);
		|};";
		ПараметрыОтрисовки = Новый Структура("ТочкаX,ТочкаY,Width,Height", ТочкаX,ТочкаY,Width,Height);
				
	КонецЕсли; 
	
	ТекстJavaScript = ТекстШаблона;
	
	Для Каждого СтрокаПарам Из ПараметрыОтрисовки Цикл
		ТекстJavaScript = СтрЗаменить(ТекстJavaScript, "%"+СтрокаПарам.Ключ+"%", СтрокаПарам.Значение)
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ТекстHTMLТекущийЭлементОбновить(Element)

	// Обновление идентификаторов элемента страницы.
	Если НЕ ПустаяСтрока(Element.id) Тогда
		ПостфиксЭлемента = "для элемента с ID """+Element.id+"""";
		//ЭлементПоля 	 = Элементы.ТекстHTML.Документ.getElementById(Element.id);
		ЭлементСтраницыID   = Element.id;
		ЭлементСтраницыName = "";ЭлементСтраницыClassName   = "";
		
	ИначеЕсли НЕ ПустаяСтрока(Element.name) Тогда
		ПостфиксЭлемента = "для элемента с именем """+Element.name+"""";
		//ЭлементПоля 	 = Элементы.ТекстHTML.Документ.getElementsByName(Element.name)[0];
		ЭлементСтраницыID   = "";ЭлементСтраницыClassName   = "";
		ЭлементСтраницыName = Element.name;
		
	ИначеЕсли НЕ ПустаяСтрока(Element.className) Тогда
		ПостфиксЭлемента = "для элемента с именем класса """+Element.className+"""";
		//ЭлементПоля 	 = Элементы.ТекстHTML.Документ.getElementsByClassName(Element.className)[0];
		ЭлементСтраницыID   = ""; ЭлементСтраницыName = "";
		ЭлементСтраницыClassName = Element.className;
	Иначе
		Элементы.ГруппаКомандыБраузер.Видимость = Ложь;
		Возврат
	КонецЕсли;
	
	Элементы.ЭлементСтраницыID.Видимость   		= Не ПустаяСтрока(ЭлементСтраницыID);
	Элементы.ЭлементСтраницыName.Видимость		= Не ПустаяСтрока(ЭлементСтраницыName);
	Элементы.ЭлементСтраницыClassName.Видимость = Не ПустаяСтрока(ЭлементСтраницыClassName);
	
	
//ДанныеСобытия.Element.nodeName = "INPUT","A"
//ДанныеСобытия.Element.id
//ДанныеСобытия.Element.name
//ДанныеСобытия.Element.value
//ДанныеСобытия.Element.type = "submit"
//ДанныеСобытия.Element.innerText
//Элементы.ТекстHTML.Документ.documentElement.innerHTML

	ДобавитьСобытияКлик = Ложь;
	
	// Обновление списка команд элемента.
	КомандыЭлементаБраузера.Очистить();
	
	Если Element.nodeName = "A" Тогда//ссылка
		КомандыЭлементаБраузера.Добавить("И в странице браузера "+ПостфиксЭлемента+" я получаю текст в переменную ""ИмяПеременной"""); //Element.innerText = "";
		КомандыЭлементаБраузера.Добавить("И в странице браузера "+ПостфиксЭлемента+" я получаю ссылку в переменную ""ИмяПеременной"""); // Element.href =
		ДобавитьСобытияКлик = Истина;
		// событие клик и правый клик: И я делаю клик, И я делаю правый клик

	ИначеЕсли Element.nodeName = "INPUT" Тогда
		Если Element.type = "submit" Тогда
			//Кнопка
			КомандыЭлементаБраузера.Добавить("И в странице браузера "+ПостфиксЭлемента+" я получаю текст кнопки в переменную ""ИмяПеременной"""); // Element.value = текстКнопки
			ДобавитьСобытияКлик = Истина;
		ИначеЕсли Element.type = "tel" ИЛИ Element.type = "text" Тогда
			//поле ввода
			//КомандыЭлементаБраузера.Добавить("И в странице браузера "+ПостфиксЭлемента+" я получаю текст в переменную ""ИмяПеременной"""); // Element.value = текстКнопки
			КомандыЭлементаБраузера.Добавить("И в странице браузера "+ПостфиксЭлемента+" я устанавливаю текст поля """+Element.value+""""); // Element.value = Текст
			// событие ввести текст
		КонецЕсли;

	ИначеЕсли Element.nodeName = "IMG" Тогда
		Если НЕ ПустаяСтрока(Element.src) Тогда
			КомандыЭлементаБраузера.Добавить("И в странице браузера "+ПостфиксЭлемента+" я получаю ссылку в переменную ""ИмяПеременной"""); // Element.src =
			ДобавитьСобытияКлик = Истина;
		КонецЕсли;
	
	ИначеЕсли Element.nodeName = "SELECT" Тогда
		КомандыЭлементаБраузера.Добавить("И в странице браузера "+ПостфиксЭлемента+" я получаю список значений в переменную ""ИмяПеременной"""); // Element.options
		КомандыЭлементаБраузера.Добавить("И в странице браузера "+ПостфиксЭлемента+" я выбираю значение """+Element.value+""" в списке"); // Element.options
		//Element.value		Element.options[7].value text
		
	ИначеЕсли Element.nodeName = "I" Тогда
		// событие клик и правый клик: И я делаю клик, И я делаю правый клик
		ДобавитьСобытияКлик = Истина;
	
	ИначеЕсли Element.nodeName = "SPAN" Тогда
		// событие клик и правый клик: И я делаю клик, И я делаю правый клик
		ДобавитьСобытияКлик = Истина;

	КонецЕсли;
	
	Если ДобавитьСобытияКлик Тогда
		// событие клик и правый клик: И я делаю клик, И я делаю правый клик
		КомандыЭлементаБраузера.Добавить("И в странице браузера "+ПостфиксЭлемента+" я делаю клик"); // Element.options
		КомандыЭлементаБраузера.Добавить("И в странице браузера "+ПостфиксЭлемента+" я делаю правый клик"); // Element.options
	КонецЕсли;
	
	Элементы.ГруппаКомандыБраузер.Видимость = (КомандыЭлементаБраузера.Количество() > 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ВызовОткрытьВебСокет(РезультатВызова, ПараметрыВызова, ДополнительныеПараметры) Экспорт
	
	//РезультатJSON = РезультатВызова;
	ТекстHTML = АдресВебКлиента;
	
	Элементы.КомандаБраузера.СписокВыбора.Очистить();
	Элементы.КомандаБраузера.СписокВыбора.Добавить("И я открываю ссылку веб-браузера """+АдресВебКлиента+"""");
	Элементы.КомандаБраузера.СписокВыбора.Добавить("И страница браузера содержит текст ""Привет мир!""");
	Элементы.КомандаБраузера.СписокВыбора.Добавить("И в странице браузера я провожу скролл к координатам ""500"" ""1000"" ");
	
	ТекстHTMLТекущийЭлементОбновить(Элементы.ТекстHTML.Документ.activeElement);
	
КонецПроцедуры

&НаКлиенте
Процедура ВызовJavaSctipt(РезультатВызова, ПараметрыВызова, ДополнительныеПараметры) Экспорт
	
	РезультатJSON = РезультатВызова;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученСнимокБраузера(РезультатВызова, ПараметрыВызова, ДополнительныеПараметры) Экспорт
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(РезультатВызова);
	ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
	Если ДанныеJSON.Свойство("result") Тогда
		ДвоичныеДанные = Base64Значение(ДанныеJSON.result.data);
		ДанныеКартинки = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
		//Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаКартинка;
		//Элементы.ДанныеКартинки.РазмерКартинки = 10;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаголовокКоманды(ИмяКоманды)
	
	Возврат Команды.Найти(ИмяКоманды).Заголовок;
	
КонецФункции

&НаКлиенте
Функция ИнициализацияФормы(ВладелецФормы, ПараметрыИнициализации = Неопределено) Экспорт
	
	Ванесса = ВладелецФормы;
	
	ТипФигуры = "Надпись";
	ФигурыПриИзменении(Неопределено);   
	
	СисИнфо = Новый СистемнаяИнформация;
	Варианты = Новый Массив;
	Если СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86 ИЛИ СисИнфо.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		ИмяФайлаБраузера = "\Google\Chrome\Application\chrome.exe";
		Варианты.Добавить("C:\Program Files" + ИмяФайлаБраузера);
		Варианты.Добавить("%ProgramFiles%" + ИмяФайлаБраузера);
		Варианты.Добавить("%ProgramFiles(x86)%" + ИмяФайлаБраузера);
		Варианты.Добавить("%LocalAppData%" + ИмяФайлаБраузера);
		ЭтоWindows = Истина;
	Иначе
		КоманднаяСтрока = "ping 127.0.0.1 -n 3";
		Варианты.Добавить("/snap/bin/chromium");
		Варианты.Добавить("/opt/google/chrome/chrome");
		ЭтоWindows = Ложь;
	КонецЕсли;
	
	//АсинхронныйПоискСуществованияФайлов = Истина;
	//Если ТипЗнч(ПараметрыИнициализации) = Тип("Структура") И ПараметрыИнициализации.Свойство("АсинхронныйПоискСуществованияФайлов") Тогда
	//	АсинхронныйПоискСуществованияФайлов = ПараметрыИнициализации.АсинхронныйПоискСуществованияФайлов;
	//КонецЕсли;
	//
	//ПараметрыПоиска = Новый Структура("ЭтоWindows,Варианты,АсинхронныйПоискСуществованияФайлов", ЭтоWindows, Варианты, АсинхронныйПоискСуществованияФайлов);
	//НайтиБраузер(ПараметрыПоиска);
	
КонецФункции

#КонецОбласти
