Процедура УдалитьЗапись(пДанные) Экспорт
	яЗапись = РегистрыСведений.Таймер.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(яЗапись, пДанные);
	яЗапись.Прочитать();
	Если яЗапись.Выбран() Тогда
		яЗапись.Удалить();
	КонецЕсли;
КонецПроцедуры

Функция ЗаписатьТаймер(пДанные) Экспорт
	яЗапись = РегистрыСведений.Таймер.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(яЗапись, пДанные);
	яЗапись.Прочитать();
	ЗаполнитьЗначенияСвойств(яЗапись, пДанные);
	яЗапись.Записать(Истина);
КонецФункции

Процедура ОбнулитьТаймерПоПользователю(пПользователь) Экспорт
	яЗ = Новый Запрос(
	"ВЫБРАТЬ
	|	Таймер.Пользователь КАК Пользователь,
	|	Таймер.Дата КАК Дата,
	|	Таймер.Комментарий КАК Комментарий,
	|	Таймер.Задача КАК Задача
	|ИЗ
	|	РегистрСведений.Таймер КАК Таймер
	|ГДЕ
	|	Таймер.Пользователь = &Пользователь
	|	И Таймер.ДатаКонец = &ДатаКонец");
	яЗ.УстановитьПараметр("Пользователь", пПользователь);
	яЗ.УстановитьПараметр("ДатаКонец", Дата(1,1,1));
	яВ = яЗ.Выполнить().Выбрать();
	
	яЗапись = РегистрыСведений.Таймер.СоздатьНаборЗаписей();
	яЗапись.Отбор.Пользователь.Установить(пПользователь);
	яЗапись.Прочитать();
	яЗапись.Очистить();
	Если яВ.Следующий() Тогда
		яС = яЗапись.Добавить();
		ЗаполнитьЗначенияСвойств(яС, яВ);
	КонецЕсли;
	яЗапись.Записать(Истина);
КонецПроцедуры

Функция ПроверитьОткрытиеТаймераПоОбращению(пЗадача, пПользователь) Экспорт
	яПустаяДата = Дата("00010101000000");
	
	яЗапрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таймер.Дата КАК Дата,
	|	Таймер.Задача КАК Задача
	|ИЗ
	|	РегистрСведений.Таймер КАК Таймер
	|ГДЕ
	|	Таймер.Пользователь = &Пользователь
	|	И Таймер.Задача = &Задача
	|	И Таймер.ДатаКонец = &ДатаКонец
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Таймер.Дата,
	|	Таймер.Задача
	|ИЗ
	|	РегистрСведений.Таймер КАК Таймер
	|ГДЕ
	|	Таймер.Пользователь = &Пользователь
	|	И Таймер.ДатаКонец = &ДатаКонец");
	яЗапрос.УстановитьПараметр("Пользователь",	пПользователь);
	яЗапрос.УстановитьПараметр("Задача",		пЗадача);
	яЗапрос.УстановитьПараметр("ДатаКонец",		яПустаяДата);
	яР = яЗапрос.Выполнить();
	яВ = яР.Выбрать();
	Если яВ.Следующий() Тогда
		
		Если ЗначениеЗаполнено(пЗадача)
			И пЗадача <> яВ.Задача Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		пЗадача = яВ.Задача;
		Возврат яВ.Дата;		
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
КонецФункции

Функция ЗакрытьВсеТаймеры(ъПользователь, ъВремяЗакрытия = Неопределено) экспорт
	яРезультат = Истина;
	яВремяОкончания = ?(ъВремяЗакрытия = Неопределено, ТекущаяДатаСеанса(), ъВремяЗакрытия);
	яТекущаяДата = ТекущаяДатаСеанса();
	
	яНЗ = РегистрыСведений.Таймер.СоздатьНаборЗаписей();
	яНЗ.Отбор.Пользователь.Установить(ъПользователь);
	яНЗ.Прочитать();
	Для Каждого яЗапись Из яНЗ Цикл
		Если Не ЗначениеЗаполнено(яЗапись.ДатаКонец) Тогда
			//Если этот таймер выполнялся в момент другого, то закрываем текущим временем
			//Иначе временем запуска другого таймера
			яЗапись.ДатаКонец = ?(яЗапись.Дата > яВремяОкончания, яТекущаяДата, яВремяОкончания);
		КонецЕсли;
	КонецЦикла;
	яНЗ.Записать();
	
	Возврат яРезультат;	
КонецФункции

Процедура ЗапуститьТаймер(пЗадача = Неопределено, пПользователь = Неопределено, ъКомментарий = "", ъДатаНачала = Неопределено) Экспорт
	яПустаяСсылка = Документы.Задача.ПустаяСсылка();
	яПользователь = ?(пПользователь = Неопределено, ПараметрыСеанса.ТекущийПользователь, пПользователь);
	яЗадача = ?(пЗадача = Неопределено, яПустаяСсылка, пЗадача);
	яДатаНачала = ?(ъДатаНачала = Неопределено, ТекущаяДатаСеанса(), ъДатаНачала);
	
	//теперь сначала закрываем все таймеры при старте нового
	ЗакрытьВсеТаймеры(яПользователь, яДатаНачала);
	
	яЕстьЗапущенный = Неопределено;
	//яЕстьЗапущенный = ПроверитьОткрытиеТаймераПоОбращению(яЗадача, яПользователь);
	//яЕстьЗапущенный = ?(яЕстьЗапущенный = Неопределено И Не ЗначениеЗаполнено(яЗадача), ПроверитьОткрытиеТаймераПоОбращению(яПустаяСсылка, яПользователь), яЕстьЗапущенный);
	
	Если яЕстьЗапущенный = Неопределено Тогда
		пДанные = Новый Структура("Дата,Пользователь,Задача,Комментарий", яДатаНачала, яПользователь, яЗадача, ъКомментарий);
		ЗаписатьТаймер(пДанные);
	Иначе
		Сообщить("Уже есть запущенный таймер в " + яЕстьЗапущенный);
	КонецЕсли;
КонецПроцедуры

Процедура ОстановитьТаймер(пЗадача = Неопределено, пПользователь = Неопределено, Знач яДатаОкончания = Неопределено) Экспорт
	яПользователь = ?(пПользователь = Неопределено, ПараметрыСеанса.ТекущийПользователь, пПользователь);
	яЗадача = ?(пЗадача = Неопределено, Документы.Задача.ПустаяСсылка(), пЗадача);
	Если яДатаОкончания = Неопределено Тогда яДатаОкончания = ТекущаяДатаСеанса() КонецЕсли;
	
	яЕстьЗапущенный = ПроверитьОткрытиеТаймераПоОбращению(яЗадача, яПользователь);
	
	Если яЕстьЗапущенный = Неопределено Тогда
		Сообщить("Запущенного таймера не обнаружено.");
	Иначе
		пДанные = Новый Структура("Дата,ДатаКонец,Пользователь,Задача", яЕстьЗапущенный, яДатаОкончания, яПользователь, яЗадача);
		ЗаписатьТаймер(пДанные);
	КонецЕсли;
КонецПроцедуры