// Получение обработок сервиса, подходящих по условиям
Функция ПолучитьОбработкиДляВыполнения(Сервис, НакопленныеДанные) Экспорт
	
	Ответ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сервис", Сервис);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТелеграмСервисОбработки.Обработка КАК Обработка,
	|	ТелеграмСервисОбработки.НаборУсловий КАК НаборУсловий
	|ИЗ
	|	Справочник.ТелеграмСервис.Обработки КАК ТелеграмСервисОбработки
	|ГДЕ
	|	ТелеграмСервисОбработки.Ссылка = &Сервис
	|	И ТелеграмСервисОбработки.Обработка.Статус = ЗНАЧЕНИЕ(Перечисление.ТелеграмСтатусыИспользования.Используется)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТелеграмСервисОбработки.НомерСтроки";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.НаборУсловий) Тогда
			УсловиеИстинно = Справочники.ТелеграмНаборУсловий.ПроверкаНабораУсловий(Выборка.НаборУсловий, НакопленныеДанные);
			Если УсловиеИстинно Тогда
				Ответ.Добавить(Выборка.Обработка);
			КонецЕсли;
		Иначе
			Ответ.Добавить(Выборка.Обработка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ответ;
	
Конецфункции


Функция ПолучитьОбработкиИсключения(НакопленныеДанные) Экспорт
	
	Ответ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТелеграмОбработка.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ТелеграмОбработка КАК ТелеграмОбработка
	|ГДЕ
	|	ТелеграмОбработка.ТипОбработки = ЗНАЧЕНИЕ(Перечисление.ТелеграмТипыОбработок.Исключение)
	|	И ТелеграмОбработка.Статус = ЗНАЧЕНИЕ(Перечисление.ТелеграмСтатусыИспользования.Используется)";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Ответ.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат Ответ;
	
КонецФункции


Процедура ВыполнитьОбработку(Обработка, НакопленныеДанные) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Обработка", Обработка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТелеграмОбработка.ОчиститьКонтекст КАК ОчиститьКонтекст,
	|	ТелеграмОбработка.КодСборкиОтвета КАК КодСборкиОтвета
	|ИЗ
	|	Справочник.ТелеграмОбработка КАК ТелеграмОбработка
	|ГДЕ
	|	ТелеграмОбработка.Ссылка = &Обработка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТелеграмОбработкаДействияНадКонтекстом.Параметр КАК Параметр,
	|	ТелеграмОбработкаДействияНадКонтекстом.Действие КАК Действие,
	|	ТелеграмОбработкаДействияНадКонтекстом.Значение КАК Значение
	|ИЗ
	|	Справочник.ТелеграмОбработка.ДействияНадКонтекстом КАК ТелеграмОбработкаДействияНадКонтекстом
	|ГДЕ
	|	ТелеграмОбработкаДействияНадКонтекстом.Ссылка = &Обработка";
	
	Пакет = Запрос.ВыполнитьПакет();
	
	РезультатОбработка = Пакет[0];
	ВыборкаОбработка = РезультатОбработка.Выбрать();
	ВыборкаОбработка.Следующий();
	
	КодСборкиОтвета = ВыборкаОбработка.КодСборкиОтвета;
	
	Бот = НакопленныеДанные.ДанныеБота.Бот;
	ИдентификаторЧата = НакопленныеДанные.ИдентификаторЧата;
	
	Если ЗначениеЗаполнено(КодСборкиОтвета) Тогда
		НакопленныеДанные.Вставить("КонтекстСеанса", РегистрыСведений.ТелеграмКонтекстСеансов.ПолучитьКонтекстСеанса(Бот, ИдентификаторЧата));
		ТелеграмСервер.ВыполнитьКодСборкиОтвета(КодСборкиОтвета, НакопленныеДанные);
	КонецЕсли;
	
	Если ИдентификаторЧата <> Неопределено Тогда
		
		Если ВыборкаОбработка.ОчиститьКонтекст Тогда
			РегистрыСведений.ТелеграмКонтекстСеансов.ОчиститьКонтекстСеанса(Бот, ИдентификаторЧата);
		КонецЕсли;
	
		РезультатДействияНадКонтекстом = Пакет[1];
		ВыборкаДействияНадКонтекстом = РезультатДействияНадКонтекстом.Выбрать();
		Пока ВыборкаДействияНадКонтекстом.Следующий() Цикл
			РегистрыСведений.ТелеграмКонтекстСеансов.ИзменитьПараметрКонтекстаСеанса(
				Бот,
				ИдентификаторЧата,
				ВыборкаДействияНадКонтекстом.Параметр,
				ВыборкаДействияНадКонтекстом.Действие,
				ВыборкаДействияНадКонтекстом.Значение);
		КонецЦикла;
		      
	КонецЕсли;
	
КонецПроцедуры