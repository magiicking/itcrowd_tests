&НаКлиенте
Процедура ОткрытьФормуСозданияШаблона(ЗаголовокФормы, Метод, НазваниеПроцедуры)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Заголовок", 		ЗаголовокФормы);
	ПараметрыОткрытия.Вставить("Метод", 			Метод);
	ПараметрыОткрытия.Вставить("НазваниеПроцедуры", НазваниеПроцедуры);
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьКодВыбор", ЭтаФорма);
	ОткрытьФорму("Справочник.ТелеграмОбработка.Форма.ФормаСозданияШаблона", ПараметрыОткрытия,ЭтаФорма,,,,ОписаниеОповещения);
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьКодВыбор(ТекстМакета, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ТекстМакета) = Тип("Строка") Тогда
		Если ЗначениеЗаполнено(Объект.КодСборкиОтвета) Тогда
			РазделительКода = Символы.ПС + Символы.ПС + Символы.ПС;
		Иначе
			РазделительКода = "";
		КонецЕсли;
		Объект.КодСборкиОтвета = Объект.КодСборкиОтвета + РазделительКода + ТекстМакета;
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СтраницыКодСборкиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаКодСборкиОтветаHTML Тогда
		ТелеграмКлиент.ОбновитьКодСборкиОтветаHTML(ЭтаФорма, "КодСборкиОтветаHTML", "КодСборкиОтвета");
		КодСборкиОтветаHTMLДокументСформирован(Элементы.КодСборкиОтветаHTML);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КодСборкиОтветаHTMLДокументСформирован(Элемент)
	
	Попытка
		Пока СписокКоманд.Количество() > 0 Цикл
			Если ТипЗнч(Элемент.Документ) = Тип("Неопределено") Тогда
				Возврат;
			КонецЕсли;
			Если Элемент.Документ.readyState <> "complete" Тогда
				Возврат;
			КонецЕсли;
			Команда = СписокКоманд.Получить(0).Значение[0];
			Если Команда = "РаскрашиваемТекст" Тогда
				Элемент.Документ.body.innerHTML = СписокКоманд.Получить(0).Значение[1];
			ИначеЕсли Команда = "ИзменитьСтили" Тогда
				// Получим стили HTML документа
				КоллекцияСтилей = Элемент.Документ.styleSheets;
				// Ситуация, когда стилей больше одного, не обрабатывается
				Если КоллекцияСтилей.length >= 1 Тогда 
					// Изменяем стиль на подготовленный
					Стили = КоллекцияСтилей.item(0);
					Стили.cssText = ТелеграмКлиент.ВернутьСтиль();
				Иначе
					Если КоллекцияСтилей.length = 0 Тогда
						НовыйСтиль = Элемент.Документ.createStyleSheet(, 0);
						НовыйСтиль.cssText = ТелеграмКлиент.ВернутьСтиль();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			СписокКоманд.Удалить(0);
		КонецЦикла
	Исключение
	КонецПопытки;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТелеграмКлиент.ОбновитьКодСборкиОтветаHTML(ЭтаФорма, "КодСборкиОтветаHTML", "КодСборкиОтвета");
	КодСборкиОтветаHTMLДокументСформирован(Элементы.КодСборкиОтветаHTML);
	
	УстановитьВидимостьДоступность();
	
	Если НЕ ЗначениеЗаполнено(Объект.КодСборкиОтвета) Тогда
		Элементы.СтраницыКодСборки.ТекущаяСтраница = Элементы.СтраницаКодСборкиОтвета;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ТипОбработкиПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура Сообщение(Команда)
	
	ОткрытьФормуСозданияШаблона("Создание шаблона отправки сообщения", "sendMessage", "ОтправитьСообщение");
	
КонецПроцедуры


&НаКлиенте
Процедура Фото(Команда)
	
	ОткрытьФормуСозданияШаблона("Создание шаблона отправки фотографии", "sendPhoto", "ОтправитьФотографию");
	
КонецПроцедуры


&НаКлиенте
Процедура Видео(Команда)
	
	ОткрытьФормуСозданияШаблона("Создание шаблона отправки видео", "sendVideo", "ОтправитьВидео");
	
КонецПроцедуры


&НаКлиенте
Процедура Файл(Команда)
	
	ОткрытьФормуСозданияШаблона("Создание шаблона отправки файла", "sendDocument", "ОтправитьДокумент");
	
КонецПроцедуры


&НаКлиенте
Процедура Аудио(Команда)
	
	ОткрытьФормуСозданияШаблона("Создание шаблона отправки аудио", "sendAudio", "ОтправитьАудио");
	
КонецПроцедуры


&НаКлиенте
Процедура Голосовое(Команда)
	
	ОткрытьФормуСозданияШаблона("Создание шаблона отправки голосовой записи", "sendVoice", "ОтправитьГолос");
	
КонецПроцедуры


&НаКлиенте
Процедура Местоположение(Команда)
	
	ОткрытьФормуСозданияШаблона("Создание шаблона отправки местоположения", "sendLocation", "ОтправитьМестоположение");
	
КонецПроцедуры


&НаКлиенте
Процедура МестоНаКарте(Команда)
	
	ОткрытьФормуСозданияШаблона("Создание шаблона отправки места на карте", "sendVenue", "ОтправитьМестоНаКарте");
	
КонецПроцедуры


&НаКлиенте
Процедура РедактироватьКонтекстнуюКлавиатуру(Команда)
	
	ОткрытьФормуСозданияШаблона("Редактирование контекстой клавиатуры", "editMessageReplyMarkup", "РедактироватьКонтекстнуюКлавиатуру");	
	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьФайл(Команда)
	
	ТекстМакета =
	"// Загружается двоичное содержимое сообщения, что бы это ни было — документ, картинка, аудио, видео, голос.
	|// Файл сохраняется в папке, указанной в реквизите ""Каталог сохранения файлов"" бота.
	|//	Результат загрузки попадает в НакопленныеДанные.ЗагруженныйФайл (<строка> или НЕОПРЕДЕЛЕНО)
	|ЗагрузитьФайл(НакопленныеДанные);";
	
	Если ЗначениеЗаполнено(Объект.КодСборкиОтвета) Тогда
		РазделительКода = Символы.ПС + Символы.ПС + Символы.ПС;
	Иначе
		РазделительКода = "";
	КонецЕсли;
	Объект.КодСборкиОтвета = Объект.КодСборкиОтвета + РазделительКода + ТекстМакета;
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура РедактироватьСообщение(Команда)
	
	ОткрытьФормуСозданияШаблона("Редактирование отправленного ранее сообщения", "editMessageText", "ИзменитьТекстСообщения");
	
КонецПроцедуры


&НаКлиенте
Процедура УдалитьСообщение(Команда)
	
	ОткрытьФормуСозданияШаблона("Удаление отправленного ранее сообщения", "deleteMessage", "УдалитьСообщение");
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьТаблицуСервисы();
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбновитьТаблицуСервисы();
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьТаблицуСервисы()
	
	Сервисы.Очистить();
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Обработка", Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТелеграмСервисОбработки.Ссылка КАК Сервис
	|ИЗ
	|	Справочник.ТелеграмСервис.Обработки КАК ТелеграмСервисОбработки
	|ГДЕ
	|	ТелеграмСервисОбработки.Обработка = &Обработка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТелеграмСервисОбработки.Ссылка.Код";
	
	Сервисы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры