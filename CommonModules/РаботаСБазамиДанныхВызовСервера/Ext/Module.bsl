Функция ПолучитьХешДанныхНачальногоОбраза(НачальныйОбраз) Экспорт
	Результат = "";
	Данные = НачальныйОбраз.Данные.Получить();
	Если ТипЗнч(Данные) = Тип("ДвоичныеДанные") Тогда
		Хеш = Новый ХешированиеДанных(ХешФункция.MD5);
		Хеш.Добавить(Данные); 
		Результат = Строка(Хеш.ХешСумма);
	КонецЕсли;
	Возврат Результат;
КонецФункции   

Функция ПолучитьДанныеНачальногоОбраза(НачальныйОбраз) Экспорт
	Возврат ПоместитьВоВременноеХранилище(НачальныйОбраз.Данные.Получить());	
КонецФункции    

Функция ПолучитьВерсиюПлатформы(Платформа) Экспорт
	Возврат СокрЛП(Платформа.Версия);
КонецФункции   

Функция ПолучитьДанныеДляСозданияБазы(Задача, Сервер, НачальныйОбраз) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("ТипСервера", 
		?(ТипЗнч(Сервер) = Тип("СправочникСсылка.ITC_Сервер"), "Файловый","СерверПриложений"));
		
	Результат.Вставить("НомерЗадачи", ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(Задача.JIRA_ID, ""));	
		
	Если ЗначениеЗаполнено(НачальныйОбраз) Тогда	
		БазаЛогинПароль = НачальныйОбраз.ЛогинПароль.Получить();
		Если ТипЗнч(БазаЛогинПароль) = Тип("Структура") Тогда
			Результат.Вставить("БазаЛогин",БазаЛогинПароль.Логин);
			Результат.Вставить("БазаПароль",БазаЛогинПароль.Пароль);				
		КонецЕсли;
	КонецЕсли;
		
	Если Результат.ТипСервера = "Файловый" Тогда
		Результат.Вставить("КаталогВременныхФайлов",Сервер.КаталогБазПоУмолчанию);
					
	Иначе
		
		Результат.Вставить("КаталогВременныхФайлов",Сервер.КаталогВременныхФайлов);
		
		СерверЛогинПароль = Сервер.ЛогинПароль.Получить();
		
		Результат.Вставить("СерверАдрес",Сервер.Адрес);
		Результат.Вставить("СерверЛогин",СерверЛогинПароль.Логин);
		Результат.Вставить("СерверПароль",СерверЛогинПароль.Пароль);
		Результат.Вставить("СерверПорт",Сервер.Порт);
		Результат.Вставить("СерверПлатформа",Сервер.Платформа);
		
		СУБДЛогинПароль = Сервер.СУБД.ЛогинПароль.Получить();
		
		Результат.Вставить("СУБДАдрес",Сервер.СУБД.Адрес);
		Результат.Вставить("СУБДЛогин",СУБДЛогинПароль.Логин);
		Результат.Вставить("СУБДПароль",СУБДЛогинПароль.Пароль);
		Результат.Вставить("СУБДТип",Сервер.СУБД.ТипСУБД);
	КонецЕсли;
	
	Результат.Вставить("СерверПлатформа",Сервер.Платформа);
	
	Возврат Результат;
КонецФункции    

Функция СоздатьБазуВСправочнике(ДанныеБазы) Экспорт
	НомерЗадачи = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ДанныеБазы.Задача.JIRA_ID, "");
	
	БазаОбъект = Справочники.ITC_База.СоздатьЭлемент(); 
	БазаОбъект.Наименование = НомерЗадачи + "_" + Строка(ДанныеБазы.Сервер);
	БазаОбъект.Адрес = ДанныеБазы.Адрес;
	БазаОбъект.Сервер = ДанныеБазы.Сервер;
	БазаОбъект.СерверПриложений = ДанныеБазы.Сервер;
	БазаОбъект.СтрокаПодключения = ДанныеБазы.СтрокаПодключения;
	БазаОбъект.АдресЛокальногоРепозитория = ДанныеБазы.АдресЛокальногоРепозитория;
	БазаОбъект.Записать();
	
	МенЗап = РегистрыСведений.БазыПоЗадачам.СоздатьМенеджерЗаписи();
	МенЗап.База = БазаОбъект.Ссылка;
	МенЗап.Задача = ДанныеБазы.Задача;
	МенЗап.Записать();
КонецФункции 

Функция ПолучитьДанныеВеткиКода(ВеткаКода) Экспорт
	Результат = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ITC_ВеткаКода.Наименование КАК ИмяВетки,
		|	ITC_ВеткаКода.Владелец.Адрес КАК АдресРепозитория,
		|	ITC_ВеткаКода.Владелец.Мастер.Наименование КАК ИмяВеткиМастер,
		|	ITC_ВеткаКода.Владелец.Дев.Наименование КАК ИмяВеткиДев,
		|	ITC_ВеткаКода.ВеткаОснование.Наименование КАК ИмяВеткиОснования
		|ИЗ
		|	Справочник.ITC_ВеткаКода КАК ITC_ВеткаКода
		|ГДЕ
		|	ITC_ВеткаКода.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",ВеткаКода);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВДЗ = РезультатЗапроса.Выбрать();	
	ВДЗ.Следующий();
	
	Результат.Вставить("ИмяВетки", ВДЗ.ИмяВетки);
	Результат.Вставить("АдресРепозитория", ВДЗ.АдресРепозитория);
	Результат.Вставить("ИмяВеткиМастер", ВДЗ.ИмяВеткиМастер);
	Результат.Вставить("ИмяВеткиДев", ВДЗ.ИмяВеткиДев);
	Результат.Вставить("ИмяВеткиОснования", ВДЗ.ИмяВеткиОснования);
	
	Возврат Результат;
КонецФункции  

Функция ПолучитьДанныеБазы(База) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ITC_База.АдресЛокальногоРепозитория КАК АдресЛокальногоРепозитория,
		|	ITC_База.СтрокаПодключения КАК СтрокаПодключения,
		|	ЕСТЬNULL(ITC_База.Сервер.Платформа, ITC_База.СерверПриложений.Платформа) КАК Платформа,
		|	ЕСТЬNULL(ITC_База.СерверПриложений.КаталогВременныхФайлов, ITC_База.Сервер.КаталогБазПоУмолчанию) КАК КаталогВременныхФайлов,
		|	ITC_База.Наименование КАК Наименование
		|ИЗ
		|	Справочник.ITC_База КАК ITC_База
		|ГДЕ
		|	ITC_База.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", База);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВДЗ = РезультатЗапроса.Выбрать();
	ВДЗ.Следующий();

	Результат = Новый Структура;
	Результат.Вставить("АдресЛокальногоРепозитория",ВДЗ.АдресЛокальногоРепозитория);
	Результат.Вставить("СтрокаПодключения",ВДЗ.СтрокаПодключения);
	Результат.Вставить("Платформа",ВДЗ.Платформа);
	Результат.Вставить("КаталогВременныхФайлов",ВДЗ.КаталогВременныхФайлов);
	Результат.Вставить("Наименование",ВДЗ.Наименование); 
	
	Возврат Результат;
КонецФункции